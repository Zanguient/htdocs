{"version":3,"sources":["autenticar.js"],"names":[],"mappingsfile":"autenticar.js","sourcesContent":["/**\n * Realiza a autenticação do operador\n * @param {json} args Argumentos da função<br/>\n * <ul>\n *      <li>\n *          <b>btn_show</b>: elemento que faz a chamada do modal de autenticação. ex: $('#autenticar')<br/>\n *          Default: $('#iniciar')\n *      </li>\n *      <li>\n *          <b>modal</b>: selector do modal. ex: $('#modal')<br/>\n *          Default: $('#modal')\n *      </li>\n *      <li>\n *          <b>input</b>: nome do campo que recebe o código de barras do operador<br/>\n *          Default: $('#operador-barra')\n *      </li>\n *      <li>\n *          <b>label</b>: label para colocar os dados do operador na tela (nome e id)<br/>\n *          Default: $('#operador')\n *      </li>\n *      <li>\n *          <b>success</b>: função caso a autenticação seja bem sucedida<br/>\n *          Default: null<br/>\n *          Recebe como parametro: retorno da consulta de autenticação\n *      </li>\n *      <li>\n *          <b>error</b>: função caso a autenticação seja mal sucessida<br/>\n *          Default: null<br/>\n *          Recebe como parametro: retorno do erro da consulta\n *      </li>\n *      </li>\n *      <li>\n *          <b>modal_show</b>: Variável que define se o modal será chamado via javascript<br/>\n *          Default: false<br/>\n *          Recebe como parametro: true ou false\n *      </li>\n * </ul>\n * @returns {void}\n */\nfunction autenticacao(args)\n{    \n    args\t\t\t\t= (typeof args              !== 'undefined') ? args\t\t\t\t : {};\n    args.btn_show   \t= (typeof args.btn_show     !== 'undefined') ? args.btn_show\t : $('#iniciar');\n    args.modal      \t= (typeof args.modal        !== 'undefined') ? args.modal\t\t : $('#modal-autenticacao');\n    args.input      \t= (typeof args.input        !== 'undefined') ? args.input\t\t : $('#operador-barra');\n    args.btn_confirm   \t= (typeof args.btn_confirm  !== 'undefined') ? args.btn_confirm  : $('#btn-confirmar-operador');\n    args.success    \t= (typeof args.success      !== 'undefined') ? args.success\t\t : null;\n    args.error      \t= (typeof args.error        !== 'undefined') ? args.error\t\t : null;\n    args.modal_show\t\t= (typeof args.modal_show   !== 'undefined') ? args.modal_show\t : false;\n    args.verificar_up\t= (typeof args.verificar_up !== 'undefined') ? args.verificar_up : false;\t//verificar se o operador está vinculado a determinada UP\n    args.operacao_id\t= (typeof args.operacao_id  !== 'undefined') ? args.operacao_id  : 7;\t//Id da operacao. Default 7 - Registrar Produção\n    args.valor          = (typeof args.valor        !== 'undefined') ? args.valor        : 1;\t//Valor a ser buscado. Default 1 - (SIM)\n    args.label      \t= (args.label === false) ? false :  args.label || $('#operador');\n\n\tfunction consultaAutenticacao()\n\t{\n        var dados = {\n            operacao_id\t\t: args.operacao_id,\n            valor_ext\t\t: args.valor,\n            barras\t\t\t: args.input.val(),\n            abort\t\t\t: true,\n\t\t\tverificar_up\t: args.verificar_up\n        };\n\n        return\texecAjax1(\n\t\t\t\t\t'POST',\n\t\t\t\t\t'/_22050/autenticacao',\n\t\t\t\t\tdados\n\t\t\t\t);\n\t}\n\t\n    /**\n     * Verificar se o operador é valido\n     * @returns {void}\n     */\n    function validar()\n    { \n        \n        if ( requestRunning == 1 ) return false;\n        \n\t\t$.when(consultaAutenticacao())\n\t\t\t.done(function(resposta){\n\n                if (resposta.length === 1) { \n                    var dados = resposta[0];\n                    \n                    if ( args.label ) {\n                        args.label\n                            .find('span.valor')\n                            .attr('title', dados['OPERADOR_NOME'])\n                            .html( pegarPalavra(dados['OPERADOR_NOME'], 0, 2) )\n                        ;\n\n                        args.label\n                            .find('#_operador-id')\n                            .val(dados['OPERADOR_ID'])\n                        ;\n                    }\n\t\t\t\t\t\n                    args.success ? args.success(dados) : null;\n\t\t\t\t\t\n                    args.modal.modal('hide');\n\n                    args.input.val('');\n                    \n                }\n            })\n\t\t\t.fail(function(xhr){\n                args.input\n                    .val('')\n                    .focus()\n                ;\n\n                args.error ? args.error(xhr) : null;\n            })\n\t\t;\t\n    }\n\n    /**\n     * Realiza a confirmação da autenticação\n     * @returns {void}\n     */\n    function confirmar()\n    {\n        \n        args.modal\n            .off('keydown', args.input.selector)\n            .on('keydown', args.input.selector, 'return', function() {\n                validar();\n            })\n\t\t\t.off('click', args.btn_confirm.selector)\n\t\t\t.on('click', args.btn_confirm.selector, function() {\n                validar();\n            })\n        ;\n    }\n\n    /**\n     * Focar no input de autenticação ao ser exibido o modal.\n     * @returns {void}\n     */\n    function focarInput()\n    {\n        args.btn_show\n            .click(function() {\n\n                //foco no campo do operador\n                setTimeout(function() {\n\n                    args.input\n                        .val('')\n                        .focus()\n                    ;\n\n                }, 500);\n            })\n        ;  \n    }\n    \n    /**\n     * Verifica se deverá realizar a chamado do modal manualmente\n     * @returns {undefined}\n     */\n    function modalShow()\n    {\n        if ( args.modal_show === true ) {\n            args.modal\n                .modal('show')\n                .on('shown.bs.modal', function () {\n                    args.input.focus();\n                })\n            ;\n        }\n    }\n    \n    focarInput();\n    confirmar();\n    modalShow();\n}"]}
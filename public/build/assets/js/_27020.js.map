{"version":3,"sources":["_27020.app.js","_27020.factory.filtro.js","_27020.factory.modelo.js","_27020.controller.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbpfile":"_27020.js","sourcesContent":["'use strict';\n\nangular\n\t.module('app', [\n\t\t'vs-repeat', \n        'gc-find',\n\t\t'gc-ajax',\n\t\t'gc-transform',\n\t\t'gc-form',\n\t\t'gc-utils',\n        'infinite-scroll'\n\t])\n;\n     ","angular\n    .module('app')\n    .factory('Filtro', Filtro);\n    \n\n\tFiltro.$inject = [\n        '$ajax',\n        '$httpParamSerializer',\n        '$rootScope',\n        '$timeout',\n        '$q',\n        'gcCollection',\n        'gScope'\n    ];\n\nfunction Filtro($ajax, $httpParamSerializer, $rootScope, $timeout, $q, gcCollection, gScope) {\n\n    /**\n     * Constructor, with class name\n     */\n    function Filtro(data) {\n        if (data) {\n            this.setData(data);\n        }\n        \n        \n//        this.DATA_1 = new Date(Clock.DATETIME_SERVER);\n//        this.DATA_2 = new Date(Clock.DATETIME_SERVER);\n\n\t\tgScope.Filtro = this; \n        \n    }\n    \n    Filtro.prototype.consultar = function(progress) {\n        \n        var that = this;\n        \n        return $q(function(resolve){\n    //        loading('.main-ctrl');     \n\n//            this.DATAHORA = {\n//                DATAHORA_1 : moment(this.DATA_1).format('YYYY.MM.DD 00:00:00'),\n//                DATAHORA_2 : moment(this.DATA_2).format('YYYY.MM.DD 23:59:59')\n//            };\n\n            $ajax.post('/_13030/api/cotas',that,{progress: progress == undefined ? false : progress}).then(function(response){\n\n                that.merge(response);\n                resolve(response);\n    //            loading('hide');\n\n            });\n        });\n    };\n   \n    \n    Filtro.prototype.merge = function(response) {\n        \n        function isNumber(n) {\n            return !isNaN(parseFloat(n)) && isFinite(n);\n        }\n\n        for ( var i in response ) {\n            var item = response[i];\n            \n            for (var k in item){\n                if (item.hasOwnProperty(k)) {\n                    \n                    if ( isNumber(item[k]) && (String(item[k]).substr(0, 1) !== '0' || String(item[k]).indexOf('.') !== -1) ) {               \n                        item[k] = parseFloat(item[k]);\n                    }\n                }\n            }            \n        }\n\n        gcCollection.merge(gScope.Cota.DADOS, response, 'ID');      \n        \n        \n        \n        /**\n         * Vinculo dos ConsumoBaixadoProdutos - Incio\n         */\n        var periodos = gcCollection.groupBy(gScope.Cota.DADOS, [\n            'CCUSTO',\n            'CCUSTO_MASK',\n            'CCUSTO_DESCRICAO',\n            'MES',\n            'ANO',\n            'PERIODO_DESCRICAO'\n        ], 'CCONTABEIS',function(periodo,ccontabil){\n\n            periodo.VALOR     == undefined ? periodo.VALOR     = 0 : '';\n            periodo.EXTRA     == undefined ? periodo.EXTRA     = 0 : '';\n            periodo.TOTAL     == undefined ? periodo.TOTAL     = 0 : '';\n            periodo.OUTROS    == undefined ? periodo.OUTROS    = 0 : '';\n            periodo.UTIL      == undefined ? periodo.UTIL      = 0 : '';\n//            periodo.PERC_UTIL == undefined ? periodo.PERC_UTIL = 0 : '';\n            periodo.SALDO     == undefined ? periodo.SALDO     = 0 : '';\n\n            periodo.VALOR     += ccontabil.VALOR    ;\n            periodo.EXTRA     += ccontabil.EXTRA    ;\n            periodo.TOTAL     += ccontabil.TOTAL    ;\n            periodo.OUTROS    += ccontabil.OUTROS   ;\n            periodo.UTIL      += ccontabil.UTIL     ;\n//            periodo.PERC_UTIL += ccontabil.PERC_UTIL;\n            periodo.SALDO     += ccontabil.SALDO    ;        \n\n\n            if ( periodo.TOTAL > 0 ) {\n                periodo.PERC_UTIL = ((1-(periodo.SALDO/periodo.TOTAL))*100);\n            } else {\n                if ( periodo.TOTAL == 0 && periodo.SALDO < 0 ) {\n                    periodo.PERC_UTIL = 100;\n                } else {\n                    periodo.PERC_UTIL = 0;  \n                }\n            }\n\n//            if ( (periodo.VALOR + periodo.EXTRA) = 0 && periodo.SALDO )\n//            IIF(A.VALOR+A.EXTRA = 0 AND A.SALDO < 0, 100, 0))\n\n        });\n        \n        gcCollection.merge(gScope.CotaPeriodo.DADOS, periodos, ['CCUSTO','MES','ANO']);\n        \n        /////\n        \n        \n        /**\n         * Vinculo dos ConsumoBaixadoProdutos - Incio\n         */\n        var ccustos = gcCollection.groupBy(gScope.CotaPeriodo.DADOS, [\n            'CCUSTO',\n            'CCUSTO_MASK',\n            'CCUSTO_DESCRICAO'\n        ], 'PERIODOS',function(ccusto,periodo){\n\n            ccusto.VALOR     == undefined ? ccusto.VALOR     = 0 : '';\n            ccusto.EXTRA     == undefined ? ccusto.EXTRA     = 0 : '';\n            ccusto.TOTAL     == undefined ? ccusto.TOTAL     = 0 : '';\n            ccusto.OUTROS    == undefined ? ccusto.OUTROS    = 0 : '';\n            ccusto.UTIL      == undefined ? ccusto.UTIL      = 0 : '';\n//            ccusto.PERC_UTIL == undefined ? ccusto.PERC_UTIL = 0 : '';\n            ccusto.SALDO     == undefined ? ccusto.SALDO     = 0 : '';     \n\n            ccusto.VALOR     += periodo.VALOR    ;\n            ccusto.EXTRA     += periodo.EXTRA    ;\n            ccusto.TOTAL     += periodo.TOTAL    ;\n            ccusto.OUTROS    += periodo.OUTROS   ;\n            ccusto.UTIL      += periodo.UTIL     ;\n//            ccusto.PERC_UTIL += periodo.PERC_UTIL;\n            ccusto.SALDO     += periodo.SALDO    ;        \n\n            if ( ccusto.TOTAL > 0 ) {\n                ccusto.PERC_UTIL = ((1-(ccusto.SALDO/ccusto.TOTAL))*100);\n            } else {\n                if ( ccusto.TOTAL == 0 && ccusto.SALDO < 0 ) {\n                    ccusto.PERC_UTIL = 100;\n                } else {\n                    ccusto.PERC_UTIL = 0;  \n                }\n            }\n        });\n        \n        gcCollection.merge(gScope.CotaCcusto.DADOS, ccustos, ['CCUSTO','MES','ANO','CCONTABIL']);\n        \n        /////\n                \n        \n//        console.log(gScope.CotaCcusto.DADOS);\n    };\n    \n    Filtro.prototype.uriHistory = function() { \n        window.history.replaceState('', '', encodeURI(urlhost + '/_13030/ng?'+$httpParamSerializer(this)));        \n    };    \n\n    /**\n     * Return the constructor function\n     */\n    return Filtro;\n};","(function(window, angular) {\n    'use strict';\n\n    angular\n        .module('app')\n        .factory('Modelo', Modelo);\n\n\tModelo.$inject = [\n        '$ajax',\n        '$q',\n        '$rootScope',\n        '$filter',\n        '$timeout',\n        '$consulta',\n        'gScope',\n        'gcCollection',\n        'gcObject'\n    ];\n\n\tfunction Modelo($ajax, $q, $rootScope, $filter,$timeout, $consulta,gScope, gcCollection, gcObject) {\n\n        // Private variables.\n        var that = null;\n        \n        \n\t    /**\n\t     * Constructor, with class name\n\t     */\n\t    function Modelo() {\n            \n            that = this; \n\n            // Public methods         \n            this.consultar     = consultar; \n            this.consultarMais = consultarMais; \n            this.merge         = merge;\n            this.emptyData     = emptyData;\n            this.virifyChange  = virifyChange;\n            this.viewPdf       = viewPdf;\n            this.Modal         = Modal; \n            \n                  \n\n            this.CONF_PAGE = {\n                FIRST : 50,\n                SKIP: 0\n            };\n            \n            this.FILTRO = {\n                STATUS : '1',\n                GET_FILES : true\n            };\n            this.CONSULTAS = [];\n            this.AJAX_LOCKED = false;\n            this.DADOS = [];\n            this.SELECTED = {};\n            this.SELECTED_BACKUP = {};\n            this.TIPOS = [];\n            this.INCLUINDO = false;\n            this.ALTERANDO = false;\n            \n\t    }\n        \n        \n        function consultar(def_page) {\n            \n            \n\n            var options = {};\n\n            if ( def_page ) {\n                angular.extend(that.FILTRO,that.CONF_PAGE);\n            } else {\n                options.progress = false;            \n            }\n\n            that.AJAX_LOCKED = true;\n            var consulta = $ajax;\n\n            that.CONSULTAS.push(consulta);\n\n            return $q(function(resolve,reject){\n                consulta.post('/_27020/api/modelos',that.FILTRO,options).then(function(response){\n\n                    that.merge(response,def_page);\n\n                    if ( def_page ) {\n                        $('.table-ec').scrollTop(0);                \n                    }\n\n                    if ( response.length >= that.CONF_PAGE.FIRST ) {\n                        that.AJAX_LOCKED = false;\n                    }\n                    resolve(response);\n                },function(e){\n                    reject(e);\n                });            \n            });    \n        }        \n          \n        \n        function consultarMais() {\n\n            that.FILTRO.SKIP   = that.FILTRO.SKIP || 0;\n            that.FILTRO.SKIP  += that.CONF_PAGE.FIRST;\n            that.FILTRO.FIRST  = that.CONF_PAGE.FIRST;\n\n            that.consultar();\n        }        \n          \n        \n        function merge(response,def_page) {\n\n            sanitizeJson(response);\n\n            response = $filter('orderBy')(response,'DESCRICAO');\n            \n            for ( var i in response ) {\n                var modelo = response[i];\n                \n                for ( var j in modelo.FILES ) {\n                    var file = modelo.FILES[j];\n                    \n                    if ( file.SEQUENCIA == '999' ) {\n                        modelo.PDF_FICHA = file.ID;\n                        \n                        var idx = modelo.FILES.indexOf(file);\n                        \n                        modelo.FILES.splice(idx,1);\n                        \n                        break;\n                    }\n                }\n            }\n\n            var preserve_main = def_page == true ? false : true;\n            gcCollection.merge(this.DADOS, response, 'ID',preserve_main);     \n\n        }        \n        \n    \n        function emptyData (newvalue,oldvalue) {\n\n            that.AJAX_LOCKED = true;\n\n            for ( var i in that.CONSULTAS ) {\n                var consulta = that.CONSULTAS[i];\n\n                consulta.abort();\n            }\n\n            that.CONSULTAS = [];\n\n            that.DADOS = [];\n        };     \n    \n    \n        function virifyChange (newvalue,oldvalue) {\n\n            if ( newvalue.toUpperCase() != oldvalue.toUpperCase() ) {\n\n                that.emptyData();\n            }\n        };       \n        \n    \n        function viewPdf (id) {\n\n\n            $ajax.get('/_27020/api/consultar-arquivo-conteudo/'+id).then(function(response){\n\n                if (response) {\n                    printPdf(response);\n                }\n            });\n        };       \n        \n        \n        var Modal = {\n            \n            _modal : function(){\n                return $('#modal-modelo');\n            },\n            show : function(shown,hidden) {\n\n                this._modal()\n                    .modal('show')\n                ;                         \n\n\n                this._modal()\n                    .one('shown.bs.modal', function(){\n\n                        $(this).find('input:focusable').first().focus();\n\n                        if ( shown ) {\n                            $rootScope.$apply(function(){\n                                shown(); \n                            });\n                        }\n                    })\n                ;    \n\n                    this._modal()\n                        .one('hidden.bs.modal', function(){\n                            \n                            if ( hidden ) {\n                                hidden();      \n                            }\n                        })\n                    ;        \n            },\n            hide : function(hidden) {\n\n                this._modal()\n                    .modal('hide')\n                ;\n\n                if ( hidden ) {\n                    this._modal()\n                        .one('hidden.bs.modal', function(){\n                            hidden ? hidden() : '';\n                        })\n                    ;                      \n                }\n            }\n        };     \n\n            \n\t    /**\n\t     * Return the constructor function\n\t     */\n\t    return Modelo;\n\t};\n   \n})(window, window.angular);","angular\n    .module('app')\n    .value('gScope', {})\n    .controller('Ctrl', Ctrl);\n    \n    \n\tCtrl.$inject = [\n        '$scope',\n        '$timeout',\n        '$consulta',\n        'gScope',\n        'Filtro',\n        'Modelo',\n        'Historico'\n    ];\n\n\tfunction Ctrl( \n        $scope, \n        $timeout, \n        $consulta,\n        gScope, \n        Filtro, \n        Modelo,\n        Historico\n    ) {\n\n\t\tvar vm = this;\n\n\t\tvm.Filtro    = new Filtro();\n\t\tvm.Modelo    = new Modelo();\n\t\tvm.Historico = new Historico();\n        \n        vm.Consulta  = new $consulta();\n        \n        vm.Modelo.consultar(true);\n\n//        $timeout(function(){\n//            vm.Filtro.consultar().then(function(){\n//\n//                loading('hide');\n//                $timeout(function(){\n//                    if ( vm.Filtro.COTA_ID > 0 ) {\n//                        var cota = $('[data-cota-id=\"' + vm.Filtro.COTA_ID + '\"]:focusable');\n//\n//                        cota.focus();\n//\n//                        $timeout(function(){\n//                            if ( vm.Filtro.COTA_OPEN == 1 && gScope.Cota.SELECTED.ID != undefined ) {\n//                                vm.Cota.dblPick(vm.Cota.SELECTED);\n//                            }\n//                        },100);\n//                    }\n//                },50);\n//\n//            });\n//\n//        },50);\n//        \n\t}   \n  "]}
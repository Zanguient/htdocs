{"version":3,"sources":["_15120.app.js","_15120.factory.estoque.js","_15120.controller.js"],"names":[],"mappingshSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"_15120.js","sourcesContent":["'use strict';\n\nangular\n\t.module('app', [\n\t\t'vs-repeat', \n        'gc-find',\n\t\t'gc-ajax',\n\t\t'gc-transform',\n\t\t'gc-form',\n\t\t'gc-utils'\n\t])\n;\n     ","angular\n    .module('app')\n    .factory('Estoque', Estoque);\n    \n\n\tEstoque.$inject = [\n        '$ajax',\n        '$httpParamSerializer',\n        '$rootScope',\n        '$q',\n        '$timeout',\n        'gcCollection',\n        'gScope'\n    ];\n\nfunction Estoque($ajax, $httpParamSerializer, $rootScope, $q, $timeout, gcCollection, gScope) {\n\n    /**\n     * Constructor, with class name\n     */\n    function Estoque(data) {\n        if (data) {\n            this.setData(data);\n        }\n        \n\t\tgScope.Estoque = this; \n        \n        this.DADOS     = [];\n        this.SELECTED  = {};\n        this.ITENS     = [];\n        this.PENDENTES = [];\n        this.GRUPOS    = [];\n        this.FILTRO    = {};\n\n        this.OPERADOR_BARRAS = '';\n\n        this.TOTAL = {\n                SALDO : 0,\n                SALDO_DETERCEIRO : 0,\n                SALDO_EMTERCEIRO : 0,\n                SALDO_REVISAO : 0,\n                SALDO_ESTRAGADO : 0,\n                OC : 0,\n                ESTOQUE_MINIMO : 0,\n                ALOCADO: 0\n            };\n\n    }\n\n    Estoque.prototype.pick = function(item,action) {\n        \n        var that = this;\n\n        if ( item != undefined ) {\n        \n            this.SELECTED = item;\n\n        }\n\n    };\n\n    Estoque.prototype.CSV = function(){\n        exportTableToCsv('Estoque_Familia.csv', 'tabela-estoque');\n    };\n\n    Estoque.prototype.XLS = function(){\n        exportTableToXls('Estoque_Familia.xls', 'tabela-estoque');\n    };\n\n    Estoque.prototype.IMPRIMIR = function(){\n        var user = $('#usuario-descricao').val();\n        var filtro = 'Família:' + gScope.Consulta_Familia.selected.DESCRICAO + '   Filtro:' + this.FILTRO.FILTRO + ' Qtd. Reg.:' + this.FILTRO.FIRST;\n        printHtml('pai-tabela-estoque', 'Consulta Resumida de Estoque Por Família', filtro, user, '1.0.0',1,'');\n    }; \n\n    Estoque.prototype.consultar = function() {\n        \n        var that = this;\n\n        var data = {};\n        \n        angular.copy(this.FILTRO,data);\n\n        data.FAMILIA = gScope.Consulta_Familia.item.dados;  \n        data.SALDO   = gScope.SALDO.STATUS;\n\n        that.DADOS = [];\n\n        that.TOTAL.SALDO            = 0; \n        that.TOTAL.SALDO_DETERCEIRO = 0; \n        that.TOTAL.SALDO_EMTERCEIRO = 0; \n        that.TOTAL.SALDO_REVISAO    = 0;  \n        that.TOTAL.SALDO_ESTRAGADO  = 0;  \n        that.TOTAL.OC               = 0; \n        that.TOTAL.ESTOQUE_MINIMO   = 0; \n        that.TOTAL.ALOCADO          = 0;     \n        \n        return $q(function(resolve,reject){\n\n            $ajax.post('/_15120/api/estoque',data)\n                .then(function(response) {\n\n                    angular.forEach(response, function(value, key) {\n\n                        var SALDO            = Number(value.SALDO); \n                        var SALDO_DETERCEIRO = Number(value.SALDO_DETERCEIRO); \n                        var SALDO_EMTERCEIRO = Number(value.SALDO_EMTERCEIRO); \n                        var SALDO_REVISAO    = Number(value.SALDO_REVISAO); \n                        var SALDO_ESTRAGADO  = Number(value.SALDO_ESTRAGADO); \n                        var OC               = Number(value.OC); \n                        var ESTOQUE_MINIMO   = Number(value.ESTOQUE_MINIMO); \n                        var ALOCADO          = Number(value.ALOCADO);\n\n                        that.TOTAL.SALDO            = Number(that.TOTAL.SALDO            ) + SALDO; \n                        that.TOTAL.SALDO_DETERCEIRO = Number(that.TOTAL.SALDO_DETERCEIRO ) + SALDO_DETERCEIRO; \n                        that.TOTAL.SALDO_EMTERCEIRO = Number(that.TOTAL.SALDO_EMTERCEIRO ) + SALDO_EMTERCEIRO; \n                        that.TOTAL.SALDO_REVISAO    = Number(that.TOTAL.SALDO_REVISAO    ) + SALDO_REVISAO; \n                        that.TOTAL.SALDO_ESTRAGADO  = Number(that.TOTAL.SALDO_ESTRAGADO  ) + SALDO_ESTRAGADO; \n                        that.TOTAL.OC               = Number(that.TOTAL.OC               ) + OC; \n                        that.TOTAL.ESTOQUE_MINIMO   = Number(that.TOTAL.ESTOQUE_MINIMO   ) + ESTOQUE_MINIMO; \n                        that.TOTAL.ALOCADO          = Number(that.TOTAL.ALOCADO          ) + ALOCADO;\n\n                    });\n\n                    that.merge(response);               \n            \n                    resolve(response);\n                })\n                .catch(function(e) {\n                    reject(e);\n                })\n            ;\n \n        });\n    };     \n       \n\n    Estoque.prototype.merge = function(response) {\n        \n        sanitizeJson(response);\n        \n        gcCollection.merge(this.DADOS, response, [\n            'ESTABELECIMENTO_ID',\n            'LOCALIZACAO_ID',\n            'FAMILIA_ID',\n            'PRODUTO_ID',\n            'TAMANHO'\n        ]);\n    };     \n\n    Estoque.prototype.checkAll = function() {\n                \n        for ( var i in this.DADOS ) {\n            var item = this.DADOS[i];\n            \n            this.toggleCheck(item,true);\n        }\n    };\n\n    Estoque.prototype.checkVisibility = function(item) {\n        \n        var that = this;\n        var ret  = true;\n        \n        for ( var i in that.GRUPOS ) {\n            var grupo = that.GRUPOS[i];\n            \n            if ( grupo.VALOR == (item.TIPO + ' ').trim() ) {\n                if ( !grupo.CHECKED ) {\n                    ret = false;\n                }\n                break;\n            }\n        }\n        \n        return ret;\n\n    };\n\n    Estoque.prototype.pendencias = function() {\n        var that = this;\n\n        $ajax.post('/_15120/api/conferencia/pendentes',that).then(function(response){\n\n            that.PENDENTES = response;\n\n            angular.forEach(that.PENDENTES, function(item, key) {\n                var adicionar = true;\n                angular.forEach(that.GRUPOS, function(iten, key) {\n                    if((item.TIPO + ' ').trim() == iten.VALOR){\n                        adicionar = false;\n                    }\n                });\n\n                if(adicionar == true){\n                    that.GRUPOS.push({VALOR: (item.TIPO + ' ').trim(), CHECKED: true});\n                }\n            });\n\n        });\n\n    };\n\n         \n    \n    \n    Estoque.prototype.clearData = function() {\n        gScope.Filtro.CODIGO_BARRAS = ''; \n        this.DADOS = []; \n        this.ITENS = [];\n        \n        $('.input-codigo-barras:focusable').first().focus();\n    };     \n    \n    \n\n    Estoque.prototype.keypress = function(item,$event) {\n        \n        if ( $event.key == ' ' ) {\n            \n            $event.preventDefault();\n            \n            this.toggleCheck(item);\n        } else        \n        if ( $event.key == 'Enter' ) {\n            \n            $event.preventDefault();\n            \n            \n            if ( this.ITENS.length > 0) {\n                this.modalOperador.show();\n            }\n        }\n    };     \n\n    Estoque.prototype.modalOperador = {\n        _modal : function () {\n            return $('#modal-autenticar-operador');\n        },\n        show : function(shown,hidden) {\n\n            this._modal()\n                .modal('show')\n            ;                         \n\n            \n            this._modal()\n                .one('shown.bs.modal', function(){\n\n                    $(this).find('input:focusable').first().focus();\n\n                    if ( shown ) {\n                        shown(); \n                    }\n                })\n            ;    \n\n                this._modal()\n                    .one('hidden.bs.modal', function(){\n                        gScope.Estoque.OPERADOR_BARRAS = '';\n                \n                        if ( hidden ) {\n                            hidden();      \n                        }\n                    })\n                ;        \n        },\n        hide : function(hidden) {\n\n            this._modal()\n                .modal('hide')\n            ;\n\n            if ( hidden ) {\n                this._modal()\n                    .one('hidden.bs.modal', function(){\n                        hidden ? hidden() : '';\n                    })\n                ;                      \n            }\n        }\n    };     \n    \n    \n    /**\n     * Return the constructor function\n     */\n    return Estoque;\n};","angular\n    .module('app')\n    .value('gScope', {})\n    .controller('Ctrl', Ctrl);\n    \n    \n\tCtrl.$inject = [\n        '$scope',\n        '$timeout',\n        'Estoque',\n        '$consulta',\n        'gScope'\n    ];\n\n\tfunction Ctrl( \n        $scope, \n        $timeout, \n        Estoque,\n        $consulta,\n        gScope\n    ) {\n\n\t\tvar vm = this;\n\n\t\tvm.Estoque = new Estoque();\n        vm.SALDO = {STATUS : true};\n\n        vm.Consulta = new $consulta();\n        vm.Consulta_Familia  = vm.Consulta.getNew();\n\n        vm.Consulta_Familia.componente              = '.famila-estoque',\n        vm.Consulta_Familia.model                   = 'vm.Consulta_Familia',\n        vm.Consulta_Familia.option.label_descricao  = 'Família:',\n        vm.Consulta_Familia.option.obj_consulta     = '/_15120/api/familia',\n        vm.Consulta_Familia.option.tamanho_input    = 'input-medio';\n        vm.Consulta_Familia.option.class            = 'Consulta_Familia';\n        vm.Consulta_Familia.option.tamanho_tabela   = 200;\n        vm.Consulta_Familia.option.required         = false;\n\n        vm.Consulta_Familia.compile();\n\n        gScope.Consulta_Familia = vm.Consulta_Familia; \n        gScope.SALDO = vm.SALDO;\n\n\n\t}   \n  "]}
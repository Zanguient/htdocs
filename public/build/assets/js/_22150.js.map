{"version":3,"sources":["array.js","_22150.js"],"names":[],"mappingsfile":"_22150.js","sourcesContent":["\n","/**\n * _22100 - Geracao de Remessas de Bojo\n */\n\n;(function(angular) {\n\n    var Ctrl = function($scope,$ajax,$timeout,$filter,$window,$interval, gcCollection) {\n        \n        /**\n         * Variável privadas \n         */\n        var vm          = this;  \n        var ferramentas = [];\n        var cor         = -1;\n        var setInter;\n        \n        /**\n         * Variáveis Públicas\n         */\n        vm.DADOS                   = [];\n        vm.FERRAMENTA_SELECIONADA  = {};\n        vm.FERRAMENTA_HISTORICO    = [];\n        vm.OPERADOR_BARRAS         = '';\n        vm.data_load               = false;        \n        vm.LAST_UPDATE             = null;\n        \n        /**\n         * Controle do Objeto de Filtro\n         */\n        vm.Filtro = {\n            /**\n             * Valores do Filtro\n             */\n            DADOS : {\n                DATA_1 : moment('2017.03.27').toDate(),//.startOf('month').toDate(),\n                DATA_2 : moment('2017.03.27').toDate()//.endOf('month').toDate()\n            },\n            /**\n             * Executa a filtragem\n             */\n            start : function(callback) {\n                \n                $ajax.post('/_22140/find',JSON.stringify(this.DADOS),{contentType: 'application/json', progress: 'manual'})\n                    .then(function(response) {\n                        vm.DADOS = response;\n                        callback ? callback() : null;\n                    }\n                );\n            },\n            /**\n             * Escutas\n             */\n            watches : function() {\n                \n                $scope.$watch(this.DADOS, function () {\n                    cor         = -1;\n                    ferramentas = [];\n                    vm.DADOS    = [];\n                }, true);\n            }\n        };\n        \n        vm.Estacao = {\n            CHECK_OCULTAR_PARADA : false\n        };\n        \n        vm.Ferramenta = {\n            SELECTED : null,\n            INDEX : 0,\n            CODE : null,\n            DISPONIVEIS : [],\n            DISPONIVEIS_SELECTED : {},\n            REGISTRO : {\n                FERRAMENTA_BARRAS : null,\n                OPERADOR_BARRAS : null,\n                GP_ID : null,\n                UP_ID : null,\n                ESTACAO : null\n            },\n            Select : function (item) {\n                this.SELECTED = item;\n                this.INDEX    = vm.DADOS.indexOf(this.SELECTED);\n                \n                if ( this.SELECTED != undefined ) {\n                    this.CODE     = this.SELECTED.CODE;\n                }\n            },\n            setInputEmpty : function () {\n                this.REGISTRO.FERRAMENTA_BARRAS = null;\n                this.REGISTRO.OPERADOR_BARRAS   = null;\n            },\n            RegistrarTroca : function() {\n                vm.OPERADOR_BARRAS = ''; \n                vm.Ferramenta.ListarDisponiveis();  \n            },\n            RegistrarAcao : function() {\n\n                var that = this;\n                if ( this.SELECTED.FERRAMENTA_SITUACAO_TALAO.trim() == 'E' ) {\n                    $('#modal-separacao')\n                        .modal('show')\n                        .one('shown.bs.modal', function(){\n                            that.setInputEmpty();\n                            $(this).find('input').first().focus();\n                        })\n                        .one('hidden.bs.modal', function(){\n                            vm.Ferramenta.setInputEmpty();\n                            $('.table-container-painel tr.selected')[0].focus();\n                        })\n                    ;\n                } else\n                if ( this.SELECTED.FERRAMENTA_SITUACAO_TALAO.trim() == 'R' ) {\n                    $('#modal-saida')\n                        .modal('show')\n                        .one('shown.bs.modal', function(){\n                            that.setInputEmpty();\n                            $(this).find('input').first().focus();\n                        })\n                        .one('hidden.bs.modal', function(){\n                            vm.Ferramenta.setInputEmpty();\n                            $('.table-container-painel tr.selected')[0].focus();\n                        })\n                    ;\n                }\n            },\n            ConfirmarSeparacao : function() {\n                \n                this.REGISTRO.GP_ID    = 0;\n                this.REGISTRO.UP_ID    = 0;\n                this.REGISTRO.ESTACAO  = 0;\n                this.REGISTRO.TALAO_ID = this.SELECTED.TALAO_ID;\n                this.REGISTRO.SITUACAO = 'R'; // Separacao;\n                \n                $ajax.post('/_22150/acao/registrar',JSON.stringify(this.REGISTRO),{contentType: 'application/json', progress: 'manual'})\n                    .then(function(response) {\n\n                        vm.Ferramenta.REGISTRO = {};\n                        vm.Ferramenta.LoadData(response);      \n                \n                        showSuccess('Separação registrada');\n                \n                        $('#modal-separacao')\n                            .modal('hide')\n                            .one('hidden.bs.modal', function(){\n                            vm.Ferramenta.setInputEmpty();\n                                $('.table-container-painel tr.selected')[0].focus();          \n                            })\n                        ;\n                    })\n                    .catch(function() {\n                        vm.Ferramenta.setInputEmpty();\n                        $('#modal-separacao').find('input').first().focus();\n                    });\n                ;\n\n            },  \n            ConfirmarSaida : function() {\n                \n                this.REGISTRO.GP_ID    = this.SELECTED.GP_ID;\n                this.REGISTRO.UP_ID    = this.SELECTED.UP_ID;\n                this.REGISTRO.ESTACAO  = this.SELECTED.ESTACAO;\n                this.REGISTRO.TALAO_ID = this.SELECTED.TALAO_ID;\n                this.REGISTRO.SITUACAO = 'S'; // Saida;\n                \n                $ajax.post('/_22150/acao/registrar',JSON.stringify(this.REGISTRO),{contentType: 'application/json', progress: 'manual'})\n                    .then(function(response) {\n\n                        vm.Ferramenta.REGISTRO = {};\n                        vm.Ferramenta.LoadData(response);      \n                \n                        showSuccess('Saida registrada');\n                \n                        $('#modal-saida')\n                            .modal('hide')\n                            .one('hidden.bs.modal', function(){\n                                vm.Ferramenta.setInputEmpty();\n                                $('.table-container-painel tr.selected')[0].focus();          \n                            })\n                        ;\n                    })\n                    .catch(function() {\n                        vm.Ferramenta.setInputEmpty();\n                        $('#modal-saida').find('input').first().focus();\n                    });\n                ;\n\n            },                \n            RegistrarEntrada : function() {\n                                \n                $('#modal-entrada')\n                    .modal('show')\n                    .one('shown.bs.modal', function(){\n                        vm.Ferramenta.REGISTRO = {};\n                        $(this).find('input').first().focus();\n                    })\n                    .one('hidden.bs.modal', function(){\n                        vm.Ferramenta.setInputEmpty();\n                        $('.table-container-painel tr.selected')[0].focus();\n                    })\n                ;\n            },\n            ConfirmarEntrada : function() {\n                \n                this.REGISTRO.GP_ID    = 0;\n                this.REGISTRO.UP_ID    = 0;\n                this.REGISTRO.ESTACAO  = 0;\n                this.REGISTRO.TALAO_ID = 0;\n                this.REGISTRO.SITUACAO = 'E'; // Entrada;\n                \n                $ajax.post('/_22150/acao/registrar',JSON.stringify(this.REGISTRO),{contentType: 'application/json', progress: 'manual'})\n                    .then(function(response) {\n\n                        vm.Ferramenta.REGISTRO = {};\n                        vm.Ferramenta.LoadData(response);      \n                \n                        showSuccess('Entrada registrada');\n                \n                        $('#modal-entrada')\n                            .modal('hide')\n                            .one('hidden.bs.modal', function(){\n                            vm.Ferramenta.setInputEmpty();\n                                $('.table-container-painel tr.selected')[0].focus();          \n                            })\n                        ;\n                    })\n                    .catch(function() {\n                        vm.Ferramenta.setInputEmpty();\n                        $('#modal-entrada').find('input').first().focus();\n                    });\n                ;\n\n            },                   \n            ListarDisponiveis : function(ferramenta) {\n                \n                if ( vm.OPERADOR_BARRAS.length > 0 ) {\n                    \n                    var dados = {\n                        DATAHORA_INICIO   : vm.Ferramenta.SELECTED.DATAHORA_INICIO,\n                        OPERADOR_BARRAS   : vm.OPERADOR_BARRAS\n                    };\n                    \n                    if ( vm.Ferramenta.SELECTED.FERRAMENTA_STATUS.trim() == '0' ) {\n                        dados.FERRAMENTA_ID = vm.Ferramenta.SELECTED.FERRAMENTA_ID;\n                    } else {\n                        dados.FERRAMENTA_BARRAS = vm.Ferramenta.SELECTED.FERRAMENTA_BARRAS;                        \n                    }\n                        \n\n                    $ajax.post('/_22150/ferramenta/listar-disponiveis',JSON.stringify(dados),{contentType: 'application/json'})\n                        .then(function(response) {\n                            \n                            vm.Ferramenta.DISPONIVEIS = response;\n                    \n                            $('#modal-autenticar-operador').off('hidden.bs.modal').modal('hide');\n                            $('#modal-ferramenta-alterar')\n                                .modal('show')\n                                .one('hidden.bs.modal', function(){\n                                    vm.Ferramenta.setInputEmpty();\n                                    $('.table-container-painel tr.selected')[0].focus(); \n                                })\n                            ;\n                        })\n                        .catch(function() {\n                            vm.OPERADOR_BARRAS = '';\n                            $('#modal-autenticar-operador').find('input').first().focus();\n                        })\n                    ;\n                } else {\n                    $('#modal-autenticar-operador')\n                        .modal('show')\n                        .one('shown.bs.modal', function(){\n                            $(this).find('input').focus();\n                        })\n                        .one('hidden.bs.modal', function(){\n                            vm.Ferramenta.setInputEmpty();\n                            $('.table-container-painel tr.selected')[0].focus(); \n                        })\n                    ; \n                }\n            },\n            Alterar : function(ferramenta) {\n                addConfirme('<h4>Confirmação</h4>',\n                    'Confirma a alteração da ferramenta?',\n                    [obtn_sim,obtn_nao],\n                    [{ret:1,func:function(){\n                        $scope.$apply(function(){\n\n                            var dados = {\n                                FERRAMENTA_ID       : vm.Ferramenta.SELECTED.FERRAMENTA_ID,\n                                DEST_FERRAMENTA_ID  : ferramenta.ID,\n                                DATAHORA_INICIO     : vm.Ferramenta.SELECTED.DATAHORA_INICIO,\n                                OPERADOR_BARRAS     : vm.OPERADOR_BARRAS\n                            };\n\n                            $ajax.post('/_22150/ferramenta/alterar',JSON.stringify(dados),{contentType: 'application/json'})\n                                .then(function(response) {  \n                                    \n                                    showSuccess(response.MSG);\n                                    vm.Ferramenta.LoadData(response.RETORNO);\n                                    \n                                    $('#modal-ferramenta-alterar')\n                                        .modal('hide')\n                                        .one('hidden.bs.modal', function(){\n                                            vm.Ferramenta.setInputEmpty();\n                                            $('.table-container-painel tr.selected')[0].focus();         \n                                        })\n                                    ;\n                                })\n                            ;    \n                        });\n                    }}]     \n                );                \n            },\n            getHistorico : function(ferramenta_id) {\n                if ( !(parseInt(ferramenta_id) > 0)  ) {\n                    showErro('Selecione uma ferramenta!');\n                    return false;\n                }\n                \n                var dados = {\n                    FERRAMENTA_ID : ferramenta_id\n                };\n                \n                $ajax.post('/_22150/ferramenta/historico',JSON.stringify(dados),{contentType: 'application/json'})\n                    .then(function(response) {  \n\n                        vm.FERRAMENTA_HISTORICO = response;\n\n                        $('#modal-historico-movimentacao')\n                            .modal('show')\n                        ;\n                    })\n                ;            \n                \n            },\n            Keydown : function($event,item) {\n                \n                if (($event.key=='Enter' || $event.key=='F1') && (item.FERRAMENTA_SITUACAO.trim() == 'E' || item.FERRAMENTA_SITUACAO.trim() == 'R') && item.FERRAMENTA_SITUACAO.trim() == item.FERRAMENTA_SITUACAO_TALAO.trim()) {\n                    vm.Ferramenta.RegistrarAcao();\n                } else\n                if (($event.key=='*' || $event.key=='F2') && item.FERRAMENTA_SITUACAO.trim() != 'R') {\n                    vm.Ferramenta.RegistrarTroca();\n                } else {\n                    return;\n                }\n            },\n            /**\n             * Executa o calculo do tempo corrido para a saida da ferramenta\n             * @param {object} item Ferramenta\n             * @returns void\n             */\n            CalcTempo : function(item) {\n\n                item.CREATEAD = new Date(item.DATAHORA_INICIO);\n\n                var cur       = Clock.DATETIME_SERVER;\n                var startTime = moment(cur).format();\n                var endTime   = moment(item.CREATEAD).format();\n\n                var duration     = moment.duration(moment(endTime).diff(startTime));\n\n                item.TIME        = duration.asMinutes();\n                item.TIME_STRING = moment.duration(item.TIME, \"minutes\").humanize(true);\n                \n            },\n            LoadData : function(dados) {\n                \n//                vm.DADOS = dados;\n                gcCollection.merge(vm.DADOS, dados, 'PROGRAMACAO_ID');\n                                \n                /**\n                 * Aplica o tempo corrido para todas as ferramentas\n                 */\n                for ( var i in vm.DADOS ) {\n                    vm.Ferramenta.CalcTempo(vm.DADOS[i]);\n                }\n\n                /**\n                 * Seleciona a ferramenta\n                 */\n                var index = indexOfAttr(vm.DADOS, 'CODE', vm.Ferramenta.CODE);\n\n                if ( index != -1 ) {\n                    vm.Ferramenta.Select(vm.DADOS[index]);\n                } else {\n                    vm.Ferramenta.Select(vm.DADOS[vm.Ferramenta.INDEX]);\n                }\n\n                setTimeout(function(){\n                    if ( !$('.modal').is(\":visible\") ) {\n                        $('.table-container-painel tr.selected')[0].focus();\n                    }\n                },10);\n            }\n        };\n        \n        \n        vm.FerramentaProgramada = {\n            ITENS : [],\n            SUB_ITENS : [],\n            SELECTED : {},\n            SELECTED_INDEX : 0,\n            FILTRO : '',\n            FILTERED : [],\n            CHECK_DISPONIVEL    : false,\n            CHECK_SEPARADA      : false,\n            CHECK_EM_PRODUCACAO : false,\n            CHECK_EM_DESUSO     : true,\n            CHECK_RESERVADA     : false,\n            Filter : function(ferramenta) {\n                \n                var ret = true;\n                \n                if ( vm.FerramentaProgramada.FILTRO != '' ) {\n                    var filtro = \n                        $filter('find')(ferramenta.HORARIOS,{\n                            model : vm.FerramentaProgramada.FILTRO,\n                            fields : [\n                                'FERRAMENTA_SERIE',\n                                'FERRAMENTA_DESCRICAO',\n                                'FERRAMENTA_ENDERECAMENTO',\n                                'FERRAMENTA_GP_DESCRICAO',\n                                'FERRAMENTA_ESTACAO_DESCROCAO',\n                                'GP_DESCRICAO',\n                                'ESTACAO_DESCRICAO'\n                            ]\n                        })\n                    ;  \n\n                    if ( filtro.length < 1 ) {\n                        ret = false;\n                    }\n                }\n                \n                if ( ret ) {\n                    \n                    var situacao = false;\n                    \n                    if ( ferramenta.FERRAMENTA_SITUACAO.trim() == 'E' && (vm.FerramentaProgramada.CHECK_OCULTAR_DISPONIVEL || '') ) {\n                        situacao = true;\n                    } else\n                    if ( ferramenta.FERRAMENTA_SITUACAO.trim()== 'R' && (vm.FerramentaProgramada.CHECK_OCULTAR_SEPARADA || '') ) {\n                        situacao = true;\n                    } else\n                    if ( ferramenta.FERRAMENTA_SITUACAO.trim() == '.' && ferramenta.FERRAMENTA_RESERVA.trim() == '1' && (vm.FerramentaProgramada.CHECK_EM_PRODUCACAO || '') ) {\n                        situacao = true;\n                    } else\n                    if ( ferramenta.FERRAMENTA_SITUACAO.trim() == '.' && ferramenta.FERRAMENTA_RESERVA.trim() == '2' && (vm.FerramentaProgramada.CHECK_EM_DESUSO || '') ) {\n                        situacao = true;\n                    } else\n                    if ( ferramenta.FERRAMENTA_SITUACAO.trim() == '.' && ferramenta.FERRAMENTA_RESERVA.trim() == '0' && (vm.FerramentaProgramada.CHECK_RESERVADA || '') ) {\n                        situacao = true;\n                    }\n                \n                    if ( !situacao ) {\n                        ret = false;\n                    }\n                    \n                }\n                \n                return ret;\n            },\n            Carregar : function() {\n                \n                $ajax.post('/_22150/painel/ferramenta-programada',JSON.stringify({}),{contentType: 'application/json', progress: false})\n                    .then(function(response) {  \n                        \n                        var ferramentas = [];\n                        gcCollection.merge(vm.FerramentaProgramada.SUB_ITENS, response, 'PROGRAMACAO_ID');\n                \n                        ferramentas = gcCollection.groupBy(vm.FerramentaProgramada.SUB_ITENS, [\n                            'FERRAMENTA_ID',\n                            'FERRAMENTA_DESCRICAO',\n                            'FERRAMENTA_ENDERECAMENTO',\n                            'FERRAMENTA_SERIE',\n                            'FERRAMENTA_GP_DESCRICAO',\n                            'FERRAMENTA_UP_DESCRICAO',\n                            'FERRAMENTA_ESTACAO_DESCRICAO',\n                            'FERRAMENTA_SITUACAO',\n                            'FERRAMENTA_SITUACAO_DESCRICAO',\n                            'FERRAMENTA_RESERVA',\n                            'FERRAMENTA_RESERVA_DESCRICAO'\n                        ], 'HORARIOS');\n                        \n                        gcCollection.merge(vm.FerramentaProgramada.ITENS, ferramentas, 'FERRAMENTA_ID');\n                        \n//\n//                        /**\n//                         * Seleciona a ferramenta\n//                         */\n//                        var index = indexOfAttr(vm.FerramentaProgramada.ITENS, 'FERRAMENTA_ID', vm.FerramentaProgramada.SELECTED.FERRAMENTA_ID);\n//\n//                        if ( index != -1 ) {\n//                            vm.FerramentaProgramada.Select(vm.FerramentaProgramada.ITENS[index]);\n//                        } else {\n//                            vm.FerramentaProgramada.Select(vm.FerramentaProgramada.ITENS[vm.FerramentaProgramada.SELECTED_INDEX]);\n//                        }\n//\n//                        if ( $('#ferramenta-programada').is(':visible') ) {\n//                            setTimeout(function(){\n//                                $('.table-ferramenta-programada tr.selected')[0].focus();\n//                            },10);\n//                        }\n                    })\n                ;  \n            },\n            Select : function (item) {\n                this.SELECTED = item;\n                this.INDEX    = vm.DADOS.indexOf(this.SELECTED);\n            },\n            Keydown : function($event) {\n                var key = $event.key;\n                \n                if ( key == 'ArrowDown' || key == 'ArrowUp' ) {\n                    $('.table-ferramenta-programada tr.selected')[0].focus();\n                }\n            },\n            Watches : function() {\n                $scope.$watch('vm.FerramentaProgramada.FILTERED', function (newValue, oldValue, scope) {\n                    if ( newValue != oldValue ) {\n                        \n                        var index = -1;\n                        \n                        if ( vm.FerramentaProgramada.SELECTED != undefined ) {\n                            index = indexOfAttr(newValue, 'FERRAMENTA_ID', vm.FerramentaProgramada.SELECTED.FERRAMENTA_ID);\n                        }\n\n                        if ( index != -1 ) {\n                            vm.FerramentaProgramada.Select(newValue[index]);\n                        } else {\n                            vm.FerramentaProgramada.Select(newValue[vm.FerramentaProgramada.SELECTED_INDEX]);\n                        }\n                    }\n                }, true);\n            }\n        };\n        \n        /**\n         * Controle do Objeto de SSE\n         */\n        var sse = new SSE('_22150/painel/sse');\n        sse.onmessage = function(event) {\n            $scope.$apply(function(){\n                vm.data_load = true;\n                vm.Ferramenta.LoadData(JSON.parse(event.data));\n                vm.FerramentaProgramada.Carregar();\n                showSuccess('Os dados foram atualizados!');\n                vm.LAST_UPDATE = Clock.DATETIME_SERVER;\n            });\n        };\n        \n        /**\n         * Aplica a contagem do tempo segundo a segundo\n         */\n        setInterval(function() {\n            for ( var i in vm.DADOS ) {\n                $scope.$apply(function(){\n                    vm.Ferramenta.CalcTempo(vm.DADOS[i]);\n                }); \n            }\n        },700);\n        \n        loading($('.ctrl'));\n        \n        $scope.$watch('vm.data_load', function (newValue, oldValue) {\n            if ( oldValue == false && newValue == true ) {\n                loading('hide');\n            }\n        }, true);\n        \n        vm.FerramentaProgramada.Watches();\n        \n//        vm.Filtro.watches();\n    };\n\n    Ctrl.$inject = ['$scope','$ajax','$timeout','$filter','$window','$interval', 'gcCollection'];\n\n    var bsInit = function() {\n        return function(scope, element, attrs) {         \n            bootstrapInit();\n        };\n    };\n    \n    var parseData = function() {\n        return function(input) {\n            if ( input ) return new Date(input);\n        };\n    };\n    \n    var gcRepeatEnd = function() {\n        return function(scope, element, attrs) {\n            angular.element(element).css('color','blue');\n            if (scope.$last){\n                bootstrapInit();\n            }\n        };\n    };  \n    \n    var config = function($mdThemingProvider) {\n        $mdThemingProvider\n            .theme('default')\n            .primaryPalette('blue')\n            .accentPalette('green')\n        ;\n    };\n        \n    angular\n    .module('app', [\n        /*'ngMaterial',*/\n        'angular.filter',\n        'vs-repeat',\n        'gc-ajax',\n        'gc-form',\n        'gc-find',\n        'gc-transform',\n        'gc-utils'\n    ])\n    /*.config    (config                       )*/\n    .filter    ('parseDate'     , parseData  )\n    .directive ('gcRepeatEnd'   , gcRepeatEnd)\n    .directive ('bsInit'        , bsInit     )\n    .controller('Ctrl'          , Ctrl       );\n        \n})(angular);\n\n;(function($) {\n   \n\t\t$(document)\n\t\t\t.on('keydown', 'body', 'insert', function() {\n                \n                if ( !($('.modal').is(':visible')) ) {\n                    $('[data-hotkey=\"insert\"]').click();\n                }\n\t\t\t})\n        ;\n})(jQuery);"]}
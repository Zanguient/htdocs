{"version":3,"sources":["_13030.app.js","_13030.factory.filtro.js","_13030.factory.cota.js","_13030.factory.cota-ggf.js","_13030.factory.cota-extra.js","_13030.factory.cota-reducao.js","_13030.factory.cota-incluir.js","_13030.factory.cota-ccusto.js","_13030.factory.cota-ccontabil.js","_13030.factory.cota-periodo.js","_13030.factory.cota-detalhe.js","_13030.controller.js"],"names":[],"mappingslzzrtKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnnnfile":"_13030.ng.js","sourcesContent":["'use strict';\n\nangular\n\t.module('app', [\n\t\t'vs-repeat', \n        'gc-find',\n\t\t'gc-ajax',\n\t\t'gc-transform',\n\t\t'gc-form',\n\t\t'gc-utils'\n\t])\n;\n     ","angular\n    .module('app')\n    .factory('Filtro', Filtro);\n    \n\n\tFiltro.$inject = [\n        '$ajax',\n        '$httpParamSerializer',\n        '$rootScope',\n        '$timeout',\n        '$q',\n        'gcCollection',\n        'gScope'\n    ];\n\nfunction Filtro($ajax, $httpParamSerializer, $rootScope, $timeout, $q, gcCollection, gScope) {\n\n    /**\n     * Constructor, with class name\n     */\n    function Filtro(data) {\n        if (data) {\n            this.setData(data);\n        }\n        \n        \n//        this.DATA_1 = new Date(Clock.DATETIME_SERVER);\n//        this.DATA_2 = new Date(Clock.DATETIME_SERVER);\n\n\t\tgScope.Filtro = this; \n        \n    }\n    \n    Filtro.prototype.consultar = function(progress) {\n        \n        var that = this;\n        \n        return $q(function(resolve){\n    //        loading('.main-ctrl');     \n\n//            this.DATAHORA = {\n//                DATAHORA_1 : moment(this.DATA_1).format('YYYY.MM.DD 00:00:00'),\n//                DATAHORA_2 : moment(this.DATA_2).format('YYYY.MM.DD 23:59:59')\n//            };\n\n            $ajax.post('/_13030/api/cotas',that,{progress: progress == undefined ? false : progress}).then(function(response){\n\n                that.merge(response);\n                resolve(response);\n    //            loading('hide');\n\n            });\n        });\n    };\n   \n    \n    Filtro.prototype.merge = function(response) {\n        \n        sanitizeJson(response);\n\n        gcCollection.merge(gScope.Cota.DADOS, response, 'ID');\n        \n        \n        \n        /**\n         * Vinculo dos ConsumoBaixadoProdutos - Incio\n         */\n        var periodos = gcCollection.groupBy(gScope.Cota.DADOS, [\n            'CCUSTO',\n            'CCUSTO_MASK',\n            'CCUSTO_DESCRICAO',\n            'MES',\n            'ANO',\n            'PERIODO_DESCRICAO'\n        ], 'CCONTABEIS',function(periodo,ccontabil){\n            \n            periodo.VALOR       == undefined ? periodo.VALOR       = 0 : '';\n            periodo.EXTRA       == undefined ? periodo.EXTRA       = 0 : '';\n            periodo.TOTAL       == undefined ? periodo.TOTAL       = 0 : '';\n            periodo.OUTROS      == undefined ? periodo.OUTROS      = 0 : '';\n            periodo.UTIL        == undefined ? periodo.UTIL        = 0 : '';\n//            periodo.PERC_UTIL   == undefined ? periodo.PERC_UTIL   = 0 : '';\n            periodo.SALDO       == undefined ? periodo.SALDO       = 0 : '';\n            periodo.CUSTO_SETOR == undefined ? periodo.CUSTO_SETOR = 0 : '';\n\n            if ( ccontabil.TIPO != 'GGF' ) {\n                periodo.VALOR       += ccontabil.VALOR      ;\n                periodo.EXTRA       += ccontabil.EXTRA      ;\n                periodo.TOTAL       += ccontabil.TOTAL      ;\n                periodo.OUTROS      += ccontabil.OUTROS     ;\n                periodo.UTIL        += ccontabil.UTIL       ;\n    //            periodo.PERC_UTIL   += ccontabil.PERC_UTIL  ;\n                periodo.SALDO       += ccontabil.SALDO      ;        \n                periodo.CUSTO_SETOR += ccontabil.CUSTO_SETOR;        \n\n\n                if ( periodo.TOTAL > 0 ) {\n                    periodo.PERC_UTIL = ((1-(periodo.SALDO/periodo.TOTAL))*100);\n                } else {\n                    if ( periodo.TOTAL == 0 && periodo.SALDO < 0 ) {\n                        periodo.PERC_UTIL = 100;\n                    } else {\n                        periodo.PERC_UTIL = 0;  \n                    }\n                }\n            }\n//            if ( (periodo.VALOR + periodo.EXTRA) = 0 && periodo.SALDO )\n//            IIF(A.VALOR+A.EXTRA = 0 AND A.SALDO < 0, 100, 0))\n\n        });\n        \n        gcCollection.merge(gScope.CotaPeriodo.DADOS, periodos, ['CCUSTO','MES','ANO']);\n        \n        /////\n        \n        \n        /**\n         * Vinculo dos ConsumoBaixadoProdutos - Incio\n         */\n        var ccustos = gcCollection.groupBy(gScope.CotaPeriodo.DADOS, [\n            'CCUSTO',\n            'CCUSTO_MASK',\n            'CCUSTO_DESCRICAO'\n        ], 'PERIODOS',function(ccusto,periodo){\n            \n            ccusto.VALOR     == undefined ? ccusto.VALOR     = 0 : '';\n            ccusto.EXTRA     == undefined ? ccusto.EXTRA     = 0 : '';\n            ccusto.TOTAL     == undefined ? ccusto.TOTAL     = 0 : '';\n            ccusto.OUTROS    == undefined ? ccusto.OUTROS    = 0 : '';\n            ccusto.UTIL      == undefined ? ccusto.UTIL      = 0 : '';\n//            ccusto.PERC_UTIL == undefined ? ccusto.PERC_UTIL = 0 : '';\n            ccusto.SALDO     == undefined ? ccusto.SALDO     = 0 : '';    \n            ccusto.CUSTO_SETOR == undefined ? ccusto.CUSTO_SETOR = 0 : ''; \n\n            ccusto.VALOR     += periodo.VALOR    ;\n            ccusto.EXTRA     += periodo.EXTRA    ;\n            ccusto.TOTAL     += periodo.TOTAL    ;\n            ccusto.OUTROS    += periodo.OUTROS   ;\n            ccusto.UTIL      += periodo.UTIL     ;\n//            ccusto.PERC_UTIL += periodo.PERC_UTIL;\n            ccusto.SALDO     += periodo.SALDO    ;      \n            ccusto.CUSTO_SETOR += periodo.CUSTO_SETOR;         \n\n            if ( ccusto.TOTAL > 0 ) {\n                ccusto.PERC_UTIL = ((1-(ccusto.SALDO/ccusto.TOTAL))*100);\n            } else {\n                if ( ccusto.TOTAL == 0 && ccusto.SALDO < 0 ) {\n                    ccusto.PERC_UTIL = 100;\n                } else {\n                    ccusto.PERC_UTIL = 0;  \n                }\n            }\n        });\n        \n        gcCollection.merge(gScope.CotaCcusto.DADOS, ccustos, ['CCUSTO','MES','ANO','CCONTABIL']);\n        \n        /////\n                \n        \n//        console.log(gScope.CotaCcusto.DADOS);\n    };\n    \n    Filtro.prototype.uriHistory = function() { \n        window.history.replaceState('', '', encodeURI(urlhost + '/_13030/ng?'+$httpParamSerializer(this)));        \n    };    \n\n    /**\n     * Return the constructor function\n     */\n    return Filtro;\n};","angular\n    .module('app')\n    .factory('Cota', Cota);\n    \n\n\tCota.$inject = [\n        '$ajax',\n        '$httpParamSerializer',\n        '$rootScope',\n        '$timeout',\n        'gcCollection',\n        'gScope'\n    ];\n\nfunction Cota($ajax, $httpParamSerializer, $rootScope, $timeout, gcCollection, gScope) {\n\n    /**\n     * Constructor, with class name\n     */\n    function Cota(data) {\n        if (data) {\n            this.setData(data);\n        }\n        \n        this.DADOS = [];\n        this.SELECTED = {};\n        this.ITENS = [];\n        this.ALTERANDO = false;\n\t\tgScope.Cota = this; \n        this.COTA_BACKUP = {};\n        \n        this.events();\n    }\n    \n    Cota.prototype.consultar = function() {\n        \n        var that = this;\n        \n        $ajax.post('/_13030/api/cota',that.SELECTED,{progress:false}).then(function(response){\n            \n            angular.extend(that.SELECTED, response);\n        });\n    };\n        \n    Cota.prototype.gravarAlteracao = function() {\n        var that = this;\n        var dados = {\n            DADOS : {\n                ITENS : [that.SELECTED]\n            },\n            FILTRO : gScope.Filtro,\n            FILTRO_COTA : that.SELECTED\n        };        \n        $ajax.post('/_13030/api/cota/update',dados).then(function(response){\n\n        \n            that.ALTERANDO = false;\n            gScope.Filtro.merge(response.DATA_RETURN.DADOS);\n            angular.extend(that.SELECTED, response.DATA_RETURN.COTA);\n        });        \n    };    \n    \n    Cota.prototype.cancelar = function() {\n        \n        var that = this;\n        addConfirme('<h4>Confirmação</h4>',\n            'Deseja realmente cancelar esta operação?',\n            [obtn_sim,obtn_nao],\n            [{ret:1,func:function(){\n                $rootScope.$apply(function(){        \n        \n                    that.ALTERANDO = false;\n                    angular.extend(that.SELECTED, that.COTA_BACKUP);\n\n                });\n            }}]     \n        );      \n    };\n\n    Cota.prototype.alterar = function() {\n        this.ALTERANDO = true;\n        angular.copy(this.SELECTED, this.COTA_BACKUP);\n    };\n    \n    Cota.prototype.excluir = function() {\n        \n        var that = this;\n        \n        addConfirme('<h4>Confirmação</h4>',\n            'Deseja realmente excluir esta cota?',\n            [obtn_sim,obtn_nao],\n            [{ret:1,func:function(){\n                $rootScope.$apply(function(){\n\n                    var dados = {\n                        DADOS : {\n                            ITENS : [that.SELECTED]\n                        },\n                        FILTRO : gScope.Filtro,\n                        FILTRO_COTA : that.SELECTED\n                    };\n\n                    $ajax.post('/_13030/api/cota/delete',dados).then(function(response){\n\n                        gScope.Filtro.merge(response.DATA_RETURN.DADOS);\n                        angular.extend(that.SELECTED, response.DATA_RETURN.COTA);\n\n                        that.ModalClose();\n                    });\n\n                });\n            }}]     \n        );        \n        \n    };\n    \n    Cota.prototype.dblPick = function(item,action) {\n        \n        var that = this;\n\n        if ( item != undefined ) {\n        \n            this.SELECTED = item;\n            \n            gScope.Filtro.COTA_ID = item.ID;\n            gScope.Filtro.COTA_OPEN = 1;\n            gScope.Filtro.uriHistory();\n            \n            that.consultar();\n            that.ModalShow(null,function(){   \n                that.ALTERANDO = false;\n                delete gScope.Filtro.COTA_OPEN;\n                gScope.Filtro.uriHistory();\n            });\n\n        }\n\n    };    \n\n    \n    Cota.prototype.pick = function(cota,setfocus) {\n        \n        var that = this;\n\n        if ( cota != undefined ) {\n        \n            this.SELECTED = cota;\n\n            gScope.Filtro.COTA_ID = cota.ID;\n            gScope.Filtro.uriHistory();\n            \n            if ( setfocus ) {\n                that.setFocus();\n            }\n        }\n\n    };  \n    \n    var modal = $('#modal-cota');\n    \n    Cota.prototype.ModalShow = function(shown,hidden) {\n\n        modal\n            .modal('show')\n        ;                         \n        \n        if ( shown ) {\n            modal\n                .one('shown.bs.modal', function(){\n                    shown();\n                })\n            ;     \n        }\n        \n        if ( hidden ) {\n            modal\n                .one('hidden.bs.modal', function(){\n                    hidden();\n                })\n            ;              \n        }\n    };\n\n    Cota.prototype.ModalClose = function(hidden) {\n\n        modal\n            .modal('hide')\n        ;\n        \n        if ( hidden ) {\n            modal\n                .one('hidden.bs.modal', function(){\n                    hidden ? hidden() : '';\n                })\n            ;                      \n        }\n    };\n    \n    Cota.prototype.inputKeydown = function($event) {\n         \n        if ( this.PESO_AUTOMATICO ) {\n            if ( isNumber($event.key) || $event.key == 'Backspace' || $event.key == 'Delete' ) {\n                $event.preventDefault();\n            }\n        }\n    };\n    \n    Cota.prototype.events = function($event) {\n        var that = this;\n        var cancel_bf_unload = false;\n        //\n        $(document).on('click','[type=\"submit\"]',function(e) {\n            var form = $(this).closest('form');\n            var action = $(form).attr('action') == undefined ? '' : $(form).attr('action');\n\n            if ( action != '' ) {\n                cancel_bf_unload = true;\n            }\n        });\n\n        var bf_load_timeout;\n\n        function warning() {\n            if ( that.ALTERANDO && cancel_bf_unload == false ) {\n                return 'oi';\n            }\n        }\n\n        function noTimeout() {\n            clearTimeout(bf_load_timeout);\n        }\n\n        window.onbeforeunload = warning;\n        window.unload = noTimeout;         \n         \n    };\n        \n    \n    /**\n     * Return the constructor function\n     */\n    return Cota;\n};","angular\n    .module('app')\n    .factory('CotaGgf', CotaGgf);\n    \n\n\tCotaGgf.$inject = [\n        '$ajax',\n        '$httpParamSerializer',\n        '$rootScope',\n        '$timeout',\n        'gcCollection',\n        'gScope'\n    ];\n\nfunction CotaGgf($ajax, $httpParamSerializer, $rootScope, $timeout, gcCollection, gScope) {\n\n    /**\n     * Constructor, with class name\n     */\n    function CotaGgf(data) {\n        if (data) {\n            this.setData(data);\n        }\n        \n        this.DADOS = {};\n        this.SELECTED = {};\n\t\tgScope.CotaGgf = this; \n        \n    }\n    \n    CotaGgf.prototype.consultarDetalhe = function(item,tipo) {\n            \n        var that = this;\n        \n        that.SELECTED = item;\n        \n        var url = tipo == 'inv' ? 'ajuste-inventario' : 'ggf';\n        $ajax.post('/_13030/api/cota/'+url+'/detalhe',item).then(function(response){\n\n            that.SELECTED.ITENS = {};\n            angular.extend(that.SELECTED.ITENS, response);\n            \n            that.ModalShow();\n        });        \n    };    \n    \n    var modal = $('#modal-cota-ggf-detalhe');\n    \n    CotaGgf.prototype.ModalShow = function(shown,hidden) {\n\n        modal\n            .modal('show')\n        ;                         \n        \n        if ( shown ) {\n            modal\n                .one('shown.bs.modal', function(){\n                    shown();\n                })\n            ;     \n        }\n        \n        if ( hidden ) {\n            modal\n                .one('hidden.bs.modal', function(){\n                    hidden();\n                })\n            ;              \n        }\n    };\n\n    CotaGgf.prototype.ModalClose = function(hidden) {\n\n        modal\n            .modal('hide')\n        ;\n        \n        if ( hidden ) {\n            modal\n                .one('hidden.bs.modal', function(){\n                    hidden ? hidden() : '';\n                })\n            ;                      \n        }\n    };\n    \n        \n    \n    /**\n     * Return the constructor function\n     */\n    return CotaGgf;\n};","angular\n    .module('app')\n    .factory('CotaExtra', CotaExtra);\n    \n\n\tCotaExtra.$inject = [\n        '$ajax',\n        '$httpParamSerializer',\n        '$rootScope',\n        '$timeout',\n        'gcCollection',\n        'gScope'\n    ];\n\nfunction CotaExtra($ajax, $httpParamSerializer, $rootScope, $timeout, gcCollection, gScope) {\n\n    /**\n     * Constructor, with class name\n     */\n    function CotaExtra(data) {\n        if (data) {\n            this.setData(data);\n        }\n        \n        this.DADOS = {};\n        \n\t\tgScope.CotaExtra = this; \n        \n\n        \n        this.events();\n    }\n    \n    CotaExtra.prototype.gravar = function() {\n        \n        var dados = {\n            ID : gScope.Cota.SELECTED.ID\n        };\n        \n        angular.extend(dados, this.DADOS);\n        \n        \n        var that = this;\n        var dados = {\n            DADOS : dados,\n            FILTRO : gScope.Filtro,\n            FILTRO_COTA : gScope.Cota.SELECTED\n        };        \n        $ajax.post('/_13030/api/cota/extra/insert',dados).then(function(response){\n\n            gScope.Filtro.merge(response.DATA_RETURN.DADOS);\n            angular.extend(gScope.Cota.SELECTED, response.DATA_RETURN.COTA);\n            \n            that.reset();\n        });        \n    };    \n    \n    CotaExtra.prototype.excluir = function(item) {\n        \n        var that = this;\n        \n        addConfirme('<h4>Confirmação</h4>',\n            'Deseja realmente excluir esta cota extra?',\n            [obtn_sim,obtn_nao],\n            [{ret:1,func:function(){\n                $rootScope.$apply(function(){\n\n                    var dados = {\n                        DADOS : item,\n                        FILTRO : gScope.Filtro,\n                        FILTRO_COTA : gScope.Cota.SELECTED\n                    };\n\n                    $ajax.post('/_13030/api/cota/extra/delete',dados).then(function(response){\n\n                        gScope.Filtro.merge(response.DATA_RETURN.DADOS);\n                        angular.extend(gScope.Cota.SELECTED, response.DATA_RETURN.COTA);\n                    });\n\n                });\n            }}]     \n        );        \n        \n    };\n    \n    CotaExtra.prototype.reset = function() {\n        \n        var dados = {\n            VALOR : null,\n            OBSERVACAO : null\n        };\n        \n        angular.extend(this.DADOS, dados);\n    \n    };\n    \n    CotaExtra.prototype.events = function($event) {\n    \n    };\n        \n    \n    /**\n     * Return the constructor function\n     */\n    return CotaExtra;\n};","angular\n    .module('app')\n    .factory('CotaReducao', CotaReducao);\n    \n\n\tCotaReducao.$inject = [\n        '$ajax',\n        '$httpParamSerializer',\n        '$rootScope',\n        '$timeout',\n        'gcCollection',\n        'gScope'\n    ];\n\nfunction CotaReducao($ajax, $httpParamSerializer, $rootScope, $timeout, gcCollection, gScope) {\n\n    /**\n     * Constructor, with class name\n     */\n    function CotaReducao(data) {\n        if (data) {\n            this.setData(data);\n        }\n        \n        this.DADOS = {};\n        \n\t\tgScope.CotaReducao = this; \n        \n\n        \n        this.events();\n    }\n    \n    CotaReducao.prototype.gravar = function() {\n        \n        var dados = {\n            ID : gScope.Cota.SELECTED.ID\n        };\n        \n        angular.extend(dados, this.DADOS);\n        \n        \n        var that = this;\n        var dados = {\n            DADOS : dados,\n            FILTRO : gScope.Filtro,\n            FILTRO_COTA : gScope.Cota.SELECTED\n        };        \n        $ajax.post('/_13030/api/cota/reducao/insert',dados).then(function(response){\n\n            gScope.Filtro.merge(response.DATA_RETURN.DADOS);\n            angular.extend(gScope.Cota.SELECTED, response.DATA_RETURN.COTA);\n            \n            that.reset();\n        });        \n    };    \n    \n    CotaReducao.prototype.excluir = function(item) {\n        \n        var that = this;\n        \n        addConfirme('<h4>Confirmação</h4>',\n            'Deseja realmente excluir esta redução?',\n            [obtn_sim,obtn_nao],\n            [{ret:1,func:function(){\n                $rootScope.$apply(function(){\n\n                    var dados = {\n                        DADOS : item,\n                        FILTRO : gScope.Filtro,\n                        FILTRO_COTA : gScope.Cota.SELECTED\n                    };\n\n                    $ajax.post('/_13030/api/cota/reducao/delete',dados).then(function(response){\n\n                        gScope.Filtro.merge(response.DATA_RETURN.DADOS);\n                        angular.extend(gScope.Cota.SELECTED, response.DATA_RETURN.COTA);\n                    });\n\n                });\n            }}]     \n        );        \n        \n    };\n    \n    CotaReducao.prototype.reset = function() {\n        \n        var dados = {\n            VALOR : null,\n            OBSERVACAO : null\n        };\n        \n        angular.extend(this.DADOS, dados);\n    \n    };\n    \n    CotaReducao.prototype.events = function($event) {\n    \n    };\n        \n    \n    /**\n     * Return the constructor function\n     */\n    return CotaReducao;\n};","angular\n    .module('app')\n    .factory('CotaIncluir', CotaIncluir);\n    \n\n\tCotaIncluir.$inject = [\n        '$ajax',\n        '$httpParamSerializer',\n        '$rootScope',\n        '$timeout',\n        'gcCollection',\n        'gScope'\n    ];\n\nfunction CotaIncluir($ajax, $httpParamSerializer, $rootScope, $timeout, gcCollection, gScope) {\n\n    /**\n     * Constructor, with class name\n     */\n    function CotaIncluir(data) {\n        if (data) {\n            this.setData(data);\n        }\n        \n        this.DADOS         = {};\n        this.INCLUINDO     = false;\n\t\tgScope.CotaIncluir = this; \n        \n        this.COTA_BACKUP = {\n            CCUSTO : null,\n            CCONTABIL : null,\n            VALOR : 0,\n            BLOQUEIA : 0,\n            NOTIFICA : 0,\n            TOTALIZA : 0,\n            DESTACA : 0\n        };\n        \n        this.events();\n    }\n    \n    CotaIncluir.prototype.gravar = function() {\n        \n        var that = this;\n        \n        that.DADOS.CCUSTO    = gScope.ConsultaCcusto.ID;\n        that.DADOS.CCONTABIL = gScope.ConsultaCcontabil.CONTA;\n        \n        var dados = {\n            DADOS : that.DADOS,\n            FILTRO : gScope.Filtro,\n            FILTRO_COTA : that.SELECTED\n        };        \n        $ajax.post('/_13030/api/cota/insert',dados).then(function(response){\n\n        \n            that.INCLUINDO = false;\n            gScope.Filtro.merge(response.DATA_RETURN.DADOS);\n            that.ModalClose();\n        });        \n    };    \n    \n    CotaIncluir.prototype.cancelar = function() {\n        \n        var that = this;\n        addConfirme('<h4>Confirmação</h4>',\n            'Deseja realmente cancelar esta operação?',\n            [obtn_sim,obtn_nao],\n            [{ret:1,func:function(){\n                $rootScope.$apply(function(){        \n        \n                    that.INCLUINDO = false;\n                    that.ModalClose();\n\n                });\n            }}]     \n        );      \n    };\n    \n    CotaIncluir.prototype.incluir = function() {\n        \n        angular.extend(this.DADOS, this.COTA_BACKUP);\n        this.INCLUINDO = true;\n        this.ModalShow(null,function(){\n            gScope.ConsultaCcusto.apagar();\n            gScope.ConsultaCcontabil.apagar();\n        });\n    };\n\n    \n    var modal = $('#modal-cota-incluir');\n    \n    CotaIncluir.prototype.ModalShow = function(shown,hidden) {\n\n        modal\n            .modal('show')\n        ;                         \n        \n        if ( shown ) {\n            modal\n                .one('shown.bs.modal', function(){\n                    shown();\n                })\n            ;     \n        }\n        \n        if ( hidden ) {\n            modal\n                .one('hidden.bs.modal', function(){\n                    hidden();\n                })\n            ;              \n        }\n    };\n\n    CotaIncluir.prototype.ModalClose = function(hidden) {\n\n        modal\n            .modal('hide')\n        ;\n        \n        if ( hidden ) {\n            modal\n                .one('hidden.bs.modal', function(){\n                    hidden ? hidden() : '';\n                })\n            ;                      \n        }\n    };\n    \n    CotaIncluir.prototype.events = function($event) {\n        var that = this;\n        var cancel_bf_unload = false;\n        //\n        $(document).on('click','[type=\"submit\"]',function(e) {\n            var form = $(this).closest('form');\n            var action = $(form).attr('action') == undefined ? '' : $(form).attr('action');\n\n            if ( action != '' ) {\n                cancel_bf_unload = true;\n            }\n        });\n\n        var bf_load_timeout;\n\n        function warning() {\n            if ( that.INCLUINDO && cancel_bf_unload == false ) {\n                return 'oi';\n            }\n        }\n\n        function noTimeout() {\n            clearTimeout(bf_load_timeout);\n        }\n\n        window.onbeforeunload = warning;\n        window.unload = noTimeout;         \n         \n    };\n        \n    \n    /**\n     * Return the constructor function\n     */\n    return CotaIncluir;\n};","angular\n    .module('app')\n    .factory('CotaCcusto', CotaCcusto);\n    \n\n\tCotaCcusto.$inject = [\n        '$ajax',\n        '$httpParamSerializer',\n        '$rootScope',\n        '$timeout',\n        'gcCollection',\n        'gScope'\n    ];\n\nfunction CotaCcusto($ajax, $httpParamSerializer, $rootScope, $timeout, gcCollection, gScope) {\n\n    /**\n     * Constructor, with class name\n     */\n    function CotaCcusto(data) {\n        if (data) {\n            this.setData(data);\n        }\n        \n        this.DADOS = [];\n        this.ITENS = [];\n        \n\t\tgScope.CotaCcusto = this; \n        \n    }\n    \n    CotaCcusto.prototype.consultar = function() {\n        \n        var that = this;\n        \n//        loading('.main-ctrl');     \n        \n        this.DATAHORA = {\n            DATAHORA_1 : moment(this.DATA_1).format('YYYY.MM.DD 00:00:00'),\n            DATAHORA_2 : moment(this.DATA_2).format('YYYY.MM.DD 23:59:59')\n        };\n        \n        $ajax.post('/_22160/api/consumo-baixado',that,{progress: false}).then(function(response){\n            \n            that.merge(response);\n            \n//            loading('hide');\n            \n        });\n    };\n   \n    \n    CotaCcusto.prototype.merge = function(response) {\n        \n        function isNumber(n) {\n            return !isNaN(parseFloat(n)) && isFinite(n);\n        }\n\n        for ( var i in response ) {\n            var item = response[i];\n            \n            for (var k in item){\n                if (item.hasOwnProperty(k)) {\n                    \n                    if ( isNumber(item[k]) && (String(item[k]).substr(0, 1) !== '0' || String(item[k]).indexOf('.') !== -1) ) {               \n                        item[k] = parseFloat(item[k]);\n                    }\n                }\n            }            \n        }\n\n        gcCollection.merge(gScope.ConsumoBaixadoTalao.DADOS, response, 'TALAO_ID');\n      \n        \n        \n        \n        /**\n         * Vinculo dos ConsumoBaixadoProdutos - Incio\n         */\n        \n        var produtos = gcCollection.groupBy(gScope.ConsumoBaixadoTalao.DADOS, [\n            'CONSUMO_PRODUTO_ID',\n            'CONSUMO_PRODUTO_DESCRICAO',\n            'CONSUMO_TAMANHO',\n            'CONSUMO_TAMANHO_DESCRICAO',\n            'CONSUMO_PROCESSO_LOCALIZACAO_ID'\n        ], 'TALOES',function(produto,talao){\n            \n            produto.TALAO_QUANTIDADE       == undefined ? produto.TALAO_QUANTIDADE       = 0 : '';\n            produto.QUANTIDADE_PROJECAO    == undefined ? produto.QUANTIDADE_PROJECAO    = 0 : '';\n            produto.QUANTIDADE_CONSUMO     == undefined ? produto.QUANTIDADE_CONSUMO     = 0 : '';\n            produto.QUANTIDADE_SALDO       == undefined ? produto.QUANTIDADE_SALDO       = 0 : '';                \n            \n            produto.TALAO_UM   == undefined ? produto.TALAO_UM   = talao.TALAO_UM   : '';\n            produto.CONSUMO_UM == undefined ? produto.CONSUMO_UM = talao.CONSUMO_UM : '';\n            \n            produto.TALAO_QUANTIDADE       += talao.TALAO_QUANTIDADE;\n            produto.QUANTIDADE_PROJECAO    += talao.QUANTIDADE_PROJECAO;\n            produto.QUANTIDADE_CONSUMO     += talao.QUANTIDADE_CONSUMO;\n            produto.QUANTIDADE_SALDO       += talao.QUANTIDADE_SALDO;\n            produto.CONSUMO_TOLERANCIA_MAX += talao.CONSUMO_TOLERANCIA_MAX;\n        });\n        \n        \n        gcCollection.merge(gScope.ConsumoBaixadoProduto.DADOS, produtos, ['CONSUMO_PRODUTO_ID','CONSUMO_TAMANHO']);\n        \n        /////\n                \n        \n    };\n    \n    CotaCcusto.prototype.checkVisibility = function(ccusto) {\n        \n        var periodos = ccusto.PERIODOS;\n        \n        ccusto.VISIBLE = false;\n        \n        for ( var i in periodos ) {\n            var periodo = periodos[i];\n            \n            if ( !ccusto.VISIBLE && periodo.FILTERED != undefined && periodo.FILTERED.length > 0 ) {\n                ccusto.VISIBLE = true;\n                break;\n            }\n        }\n        \n    };\n    \n    \n    CotaCcusto.prototype.toggleExpand = function(type) {\n        \n        \n        var that = this;\n        var bool = null;\n        \n        if ( type != undefined ) {\n            bool = type;\n        } else {\n            if ( gScope.Filtro.EXPANDED == undefined || gScope.Filtro.EXPANDED == null || !gScope.Filtro.EXPANDED ) {\n                bool = true;\n            } else {\n                bool = false;\n            }\n        }\n        \n        gScope.Filtro.EXPANDED = bool;\n        \n        for ( var i in that.DADOS ) {\n            var ccusto = that.DADOS[i];\n            \n            ccusto.OPENED = bool;\n            ccusto.VISIBLE = bool;\n            \n            for ( var j in ccusto.PERIODOS ) {\n                var periodo = ccusto.PERIODOS[j];\n                \n                periodo.OPENED = bool;\n            }\n        }\n        \n    };\n\n    /**\n     * Return the constructor function\n     */\n    return CotaCcusto;\n};","angular\n    .module('app')\n    .factory('CotaCcontabil', CotaCcontabil);\n    \n\n\tCotaCcontabil.$inject = [\n        '$ajax',\n        '$httpParamSerializer',\n        '$rootScope',\n        '$timeout',\n        'gcCollection',\n        'gScope'\n    ];\n\nfunction CotaCcontabil($ajax, $httpParamSerializer, $rootScope, $timeout, gcCollection, gScope) {\n\n    /**\n     * Constructor, with class name\n     */\n    function CotaCcontabil(data) {\n        if (data) {\n            this.setData(data);\n        }\n        \n        this.DADOS = [];\n        this.ITENS = [];\n        this.SELECTED = {};\n        this.FILTRO = '';\n\t\tgScope.CotaCcontabil = this; \n        \n    }\n    \n    CotaCcontabil.prototype.pick = function(ccontabil,setfocus) {\n        \n        var that = this;\n\n        if ( ccontabil != undefined ) {\n        \n            this.SELECTED = ccontabil;\n\n            if ( setfocus ) {\n                that.setFocus();\n            }\n        }\n\n    };    \n\n    /**\n     * Return the constructor function\n     */\n    return CotaCcontabil;\n};","angular\n    .module('app')\n    .factory('CotaPeriodo', CotaPeriodo);\n    \n\n\tCotaPeriodo.$inject = [\n        '$ajax',\n        '$httpParamSerializer',\n        '$rootScope',\n        '$timeout',\n        'gcCollection',\n        'gScope'\n    ];\n\nfunction CotaPeriodo($ajax, $httpParamSerializer, $rootScope, $timeout, gcCollection, gScope) {\n\n    /**\n     * Constructor, with class name\n     */\n    function CotaPeriodo(data) {\n        if (data) {\n            this.setData(data);\n        }\n        \n        this.DADOS = [];\n        this.ITENS = [];\n        \n\t\tgScope.CotaPeriodo = this; \n        \n    }\n    \n    CotaPeriodo.prototype.consultar = function() {\n        \n        var that = this;\n        \n//        loading('.main-ctrl');     \n        \n        this.DATAHORA = {\n            DATAHORA_1 : moment(this.DATA_1).format('YYYY.MM.DD 00:00:00'),\n            DATAHORA_2 : moment(this.DATA_2).format('YYYY.MM.DD 23:59:59')\n        };\n        \n        $ajax.post('/_22160/api/consumo-baixado',that,{progress: false}).then(function(response){\n            \n            that.merge(response);\n            \n//            loading('hide');\n            \n        });\n    };\n   \n    \n    CotaPeriodo.prototype.merge = function(response) {\n        \n        function isNumber(n) {\n            return !isNaN(parseFloat(n)) && isFinite(n);\n        }\n\n        for ( var i in response ) {\n            var item = response[i];\n            \n            for (var k in item){\n                if (item.hasOwnProperty(k)) {\n                    \n                    if ( isNumber(item[k]) && (String(item[k]).substr(0, 1) !== '0' || String(item[k]).indexOf('.') !== -1) ) {               \n                        item[k] = parseFloat(item[k]);\n                    }\n                }\n            }            \n        }\n\n        gcCollection.merge(gScope.ConsumoBaixadoTalao.DADOS, response, 'TALAO_ID');\n      \n        \n        \n        \n        /**\n         * Vinculo dos ConsumoBaixadoProdutos - Incio\n         */\n        \n        var produtos = gcCollection.groupBy(gScope.ConsumoBaixadoTalao.DADOS, [\n            'CONSUMO_PRODUTO_ID',\n            'CONSUMO_PRODUTO_DESCRICAO',\n            'CONSUMO_TAMANHO',\n            'CONSUMO_TAMANHO_DESCRICAO',\n            'CONSUMO_PROCESSO_LOCALIZACAO_ID'\n        ], 'TALOES',function(produto,talao){\n            \n            produto.TALAO_QUANTIDADE       == undefined ? produto.TALAO_QUANTIDADE       = 0 : '';\n            produto.QUANTIDADE_PROJECAO    == undefined ? produto.QUANTIDADE_PROJECAO    = 0 : '';\n            produto.QUANTIDADE_CONSUMO     == undefined ? produto.QUANTIDADE_CONSUMO     = 0 : '';\n            produto.QUANTIDADE_SALDO       == undefined ? produto.QUANTIDADE_SALDO       = 0 : '';                \n            \n            produto.TALAO_UM   == undefined ? produto.TALAO_UM   = talao.TALAO_UM   : '';\n            produto.CONSUMO_UM == undefined ? produto.CONSUMO_UM = talao.CONSUMO_UM : '';\n            \n            produto.TALAO_QUANTIDADE       += talao.TALAO_QUANTIDADE;\n            produto.QUANTIDADE_PROJECAO    += talao.QUANTIDADE_PROJECAO;\n            produto.QUANTIDADE_CONSUMO     += talao.QUANTIDADE_CONSUMO;\n            produto.QUANTIDADE_SALDO       += talao.QUANTIDADE_SALDO;\n            produto.CONSUMO_TOLERANCIA_MAX += talao.CONSUMO_TOLERANCIA_MAX;\n        });\n        \n        \n        gcCollection.merge(gScope.ConsumoBaixadoProduto.DADOS, produtos, ['CONSUMO_PRODUTO_ID','CONSUMO_TAMANHO']);\n        \n        /////\n                \n        \n    };\n\n    /**\n     * Return the constructor function\n     */\n    return CotaPeriodo;\n};","angular\n    .module('app')\n    .factory('CotaDetalhe', CotaDetalhe);\n    \n\n\tCotaDetalhe.$inject = [\n        '$ajax',\n        '$httpParamSerializer',\n        '$rootScope',\n        '$timeout',\n        'gcCollection',\n        'gScope'\n    ];\n\nfunction CotaDetalhe($ajax, $httpParamSerializer, $rootScope, $timeout, gcCollection, gScope) {\n\n    /**\n     * Constructor, with class name\n     */\n    function CotaDetalhe(data) {\n        if (data) {\n            this.setData(data);\n        }\n        \n        this.DADOS = [];\n        this.ITENS = [];\n        \n\t\tgScope.CotaDetalhe = this; \n        \n    }\n    \n    CotaDetalhe.prototype.consultar = function() {\n        \n        var that = this;\n        \n//        loading('.main-ctrl');     \n        \n        this.DATAHORA = {\n            DATAHORA_1 : moment(this.DATA_1).format('YYYY.MM.DD 00:00:00'),\n            DATAHORA_2 : moment(this.DATA_2).format('YYYY.MM.DD 23:59:59')\n        };\n        \n        $ajax.post('/_22160/api/consumo-baixado',that,{progress: false}).then(function(response){\n            \n            that.merge(response);\n            \n//            loading('hide');\n            \n        });\n    };\n   \n    \n    CotaDetalhe.prototype.merge = function(response) {\n        \n        function isNumber(n) {\n            return !isNaN(parseFloat(n)) && isFinite(n);\n        }\n\n        for ( var i in response ) {\n            var item = response[i];\n            \n            for (var k in item){\n                if (item.hasOwnProperty(k)) {\n                    \n                    if ( isNumber(item[k]) && (String(item[k]).substr(0, 1) !== '0' || String(item[k]).indexOf('.') !== -1) ) {               \n                        item[k] = parseFloat(item[k]);\n                    }\n                }\n            }            \n        }\n\n        gcCollection.merge(gScope.ConsumoBaixadoTalao.DADOS, response, 'TALAO_ID');\n      \n        \n        \n        \n        /**\n         * Vinculo dos ConsumoBaixadoProdutos - Incio\n         */\n        \n        var produtos = gcCollection.groupBy(gScope.ConsumoBaixadoTalao.DADOS, [\n            'CONSUMO_PRODUTO_ID',\n            'CONSUMO_PRODUTO_DESCRICAO',\n            'CONSUMO_TAMANHO',\n            'CONSUMO_TAMANHO_DESCRICAO',\n            'CONSUMO_PROCESSO_LOCALIZACAO_ID'\n        ], 'TALOES',function(produto,talao){\n            \n            produto.TALAO_QUANTIDADE       == undefined ? produto.TALAO_QUANTIDADE       = 0 : '';\n            produto.QUANTIDADE_PROJECAO    == undefined ? produto.QUANTIDADE_PROJECAO    = 0 : '';\n            produto.QUANTIDADE_CONSUMO     == undefined ? produto.QUANTIDADE_CONSUMO     = 0 : '';\n            produto.QUANTIDADE_SALDO       == undefined ? produto.QUANTIDADE_SALDO       = 0 : '';                \n            \n            produto.TALAO_UM   == undefined ? produto.TALAO_UM   = talao.TALAO_UM   : '';\n            produto.CONSUMO_UM == undefined ? produto.CONSUMO_UM = talao.CONSUMO_UM : '';\n            \n            produto.TALAO_QUANTIDADE       += talao.TALAO_QUANTIDADE;\n            produto.QUANTIDADE_PROJECAO    += talao.QUANTIDADE_PROJECAO;\n            produto.QUANTIDADE_CONSUMO     += talao.QUANTIDADE_CONSUMO;\n            produto.QUANTIDADE_SALDO       += talao.QUANTIDADE_SALDO;\n            produto.CONSUMO_TOLERANCIA_MAX += talao.CONSUMO_TOLERANCIA_MAX;\n        });\n        \n        \n        gcCollection.merge(gScope.ConsumoBaixadoProduto.DADOS, produtos, ['CONSUMO_PRODUTO_ID','CONSUMO_TAMANHO']);\n        \n        /////\n                \n        \n    };\n\n    /**\n     * Return the constructor function\n     */\n    return CotaDetalhe;\n};","angular\n    .module('app')\n    .value('gScope', {})\n    .controller('Ctrl', Ctrl);\n    \n    \n\tCtrl.$inject = [\n        '$scope',\n        '$timeout',\n        '$consulta',\n        'gScope',\n        'Filtro',\n        'Cota',\n        'CotaExtra',\n        'CotaReducao',\n        'CotaGgf',\n        'CotaIncluir',\n        'CotaCcusto',\n        'CotaPeriodo',\n        'CotaCcontabil',\n        'CotaDetalhe',\n        'Historico'\n    ];\n\n\tfunction Ctrl( \n        $scope, \n        $timeout, \n        $consulta,\n        gScope, \n        Filtro, \n        Cota,\n        CotaExtra,\n        CotaReducao,\n        CotaGgf,\n        CotaIncluir,\n        CotaCcusto,\n        CotaPeriodo,\n        CotaCcontabil,\n        CotaDetalhe, \n        Historico\n    ) {\n\n\t\tvar vm = this;\n\n\t\tvm.Filtro        = new Filtro();\n\t\tvm.Cota          = new Cota();\n\t\tvm.CotaExtra     = new CotaExtra();\n\t\tvm.CotaReducao   = new CotaReducao();\n\t\tvm.CotaGgf       = new CotaGgf();\n\t\tvm.CotaIncluir   = new CotaIncluir();\n\t\tvm.CotaCcusto    = new CotaCcusto();\n\t\tvm.CotaPeriodo   = new CotaPeriodo();\n\t\tvm.CotaCcontabil = new CotaCcontabil();\n\t\tvm.CotaDetalhe   = new CotaDetalhe();\n\t\tvm.Historico     = new Historico('vm.Historico');\n\n\n        vm.Consulta   = new $consulta();\n        \n        vm.ConsultaCcusto                        = vm.Consulta.getNew(true);\n        vm.ConsultaCcusto.componente             = '.consulta-ccusto';\n        vm.ConsultaCcusto.model                  = 'vm.ConsultaCcusto';\n        vm.ConsultaCcusto.option.label_descricao = 'C. Custo:';\n        vm.ConsultaCcusto.option.obj_consulta    = '/_20030/api/ccusto';\n        vm.ConsultaCcusto.option.tamanho_input   = 'input-maior';\n        vm.ConsultaCcusto.option.campos_tabela   = [['MASK', 'C. Custo'],['DESCRICAO','Descrição']];\n        vm.ConsultaCcusto.option.obj_ret         = ['MASK', 'DESCRICAO'];\n        vm.ConsultaCcusto.compile();\n        gScope.ConsultaCcusto = vm.ConsultaCcusto;\n        \n        vm.ConsultaCcontabil                        = vm.Consulta.getNew(true);\n        vm.ConsultaCcontabil.componente             = '.consulta-ccontabil';\n        vm.ConsultaCcontabil.model                  = 'vm.ConsultaCcontabil';\n        vm.ConsultaCcontabil.option.label_descricao = 'C. Contábil:';\n        vm.ConsultaCcontabil.option.obj_consulta    = '/_17010/api/ccontabil';\n        vm.ConsultaCcontabil.option.tamanho_input   = 'input-maior';\n        vm.ConsultaCcontabil.option.campos_tabela   = [['MASK', 'C. Contábil'],['DESCRICAO','Descrição']];\n        vm.ConsultaCcontabil.option.obj_ret         = ['MASK', 'DESCRICAO'];\n        vm.ConsultaCcontabil.compile();\n        vm.ConsultaCcontabil.setDataRequest({CCONTABIL_TIPO: 'analitica'});\n        gScope.ConsultaCcontabil = vm.ConsultaCcontabil;\n        \n\n        loading('.main-ctrl');    \n        $timeout(function(){\n            vm.Filtro.consultar().then(function(){\n\n                if ( vm.Filtro.COTA_ID > 0 || gScope.CotaCcusto.DADOS.length <= 3 ) {\n                    vm.CotaCcusto.toggleExpand(true);\n                }\n                \n                loading('hide');\n                $timeout(function(){\n                    if ( vm.Filtro.COTA_ID > 0 ) {\n                        var cota = $('[data-cota-id=\"' + vm.Filtro.COTA_ID + '\"]:focusable');\n\n                        cota.focus();\n                                       \n                        var item = vm.Cota.SELECTED;\n\n                        for ( var i in gScope.CotaCcusto.DADOS ) {\n                            var cota = gScope.CotaCcusto.DADOS[i];\n\n                            if ( cota.CCUSTO != item.CCUSTO ) {\n                                cota.OPENED = false;\n                                \n                                for ( var j in cota.PERIODOS ) {\n                                    var periodo = cota.PERIODOS[j];\n\n                                    periodo.OPENED = false;\n                                }\n                            } else {\n                                \n                                for ( var j in cota.PERIODOS ) {\n                                    var periodo = cota.PERIODOS[j];\n                                    \n                                    if ( periodo.PERIODO_DESCRICAO != item.PERIODO_DESCRICAO ) {\n                                        periodo.OPENED = false;\n                                    }\n                                }                                \n                            }\n                        }\n\n                        $timeout(function(){                 \n                                    \n                            if ( vm.Filtro.COTA_OPEN == 1 && gScope.Cota.SELECTED.ID != undefined ) {\n                                vm.Cota.dblPick(vm.Cota.SELECTED);\n                            }\n                        },100);\n                    }\n                },50);\n\n            });\n\n        },50);\n\t}   \n  "]}
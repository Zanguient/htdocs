{"version":3,"sources":["_22020-Pronta-Entrega.js"],"names":[],"mappingsfile":"_22020-Pronta-Entrega.js","sourcesContent":["/* global table_default */\n\n/**\n * Script com funções do obj _22020. (Para utilização de sobras e materias já pronto, servindo com pronta entrega)\n */\n    \n    //variaveis de validação\n    var _tid = 0;\n    var _btn;\n    var vp = 0;\n    var vt = 0;\n    var vs = 0;\n    var cb;\n    var REMESSA_ID = 0;\n    var REMESSA_TALAO_ID = 0;\n    \n    function gravar_prod(){\n        var input\t\t= '';\n        var url        = '/_22020/alterarQtdTalaoDetalhe';\n        var retorno\t= '';\n\n        var sbr = (parseFloat(vs)).toFixed(4);\n        var qtd = (vt).toFixed(4);\n        \n        var tid = _tid;\n        var btn = _btn;\n        \n        if ( $(btn).parent('td').hasClass('qtd') ) {\n            input\t= 'input.qtd';\n            retorno = 'QUANTIDADE';\n        }\n        else {\n            input\t= 'input.qtd-alternativa';\n            retorno = 'QUANTIDADE_ALTERNATIVA';\n        }\n\n        execAjax1(\n           'POST',\n           url, \n           { \n               retorno\t\t\t: retorno,\n               qtd\t\t\t\t: qtd,\n               sbr\t\t\t\t: sbr,\n               talao_detalhe_id\t: tid,\n               REMESSA_ID       : REMESSA_ID,\n               REMESSA_TALAO_ID : REMESSA_TALAO_ID\n           },\n           function(data) {\n               \n                if(qtd > 0){\n                    validarRet(data,btn);\n                }\n               \n               $(btn)\n                   .siblings('span.valor')\n                   .empty()\n                   .text( formataPadraoBr(qtd) )\n                   .show()\n               ;\n               \n               $(cb).empty().text(sbr);\n\n\t\t\t\tvar btn_parent\t= $(btn).parent();\n\t\t\t\tvar th_qtd = '';\n\t\t\t\t\n\t\t\t\tif (input === 'input.qtd') {\n\t\t\t\t\t\n\t\t\t\t\tth_qtd\t\t\t\t\t= 'th.qtd';\n\t\t\t\t\tvar input_qtd\t\t\t= $(btn_parent).siblings('._quantidade');\n\t\t\t\t\t\n\t\t\t\t\t$(input_qtd)\n\t\t\t\t\t\t.val(qtd)\n\t\t\t\t\t;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t\n\t\t\t\t\tth_qtd\t\t\t\t\t= 'th.qtd-alternativa';\n\t\t\t\t\tvar input_qtd\t\t\t= $(btn_parent).siblings('._quantidade-alternativa');\n\t\t\t\t\t\n\t\t\t\t\t$(input_qtd)\n\t\t\t\t\t\t.val(qtd)\n\t\t\t\t\t;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$('#detalhe')\n\t\t\t\t\t.find(th_qtd)\n\t\t\t\t\t.removeClass('editando')\n\t\t\t\t;\n\t\t\t\t\n\t\t\t\t$(btn)\n\t\t\t\t\t.parent()\n\t\t\t\t\t.removeClass('editando')\n\t\t\t\t;\n\t\t\t\t\n\n               $(btn)\n                   .siblings(input)\n                   .attr('max', qtd)\n                   .hide()\n               ;\n\n               $(btn)\n                   .hide()\n               ;\n\n               $(btn)\n                   .siblings('button.qtd-cancelar')\n                   .hide()\n               ;\n\n               $(btn)\n                   .siblings('button.qtd-editar')\n                   .show()\n               ;\n               \n               showSuccess('Quantidade alterada com sucesso.');\n               \n               if(qtd == 0){\n                   $('.btn-filtrar').click();\n               }\n               \n           }\n\n       );\n    }\n    \n    function gravar_SobraMaterial(consumo_id,sobra){\n        var input   = '';\n        var url     = '/_22020/alterarQtdSobraMaterial';\n        var retorno\t= '';\n\n        execAjax1(\n           'POST',\n           url, \n           { \n               consumo_id : consumo_id,\n               sobra\t  : sobra\n           },\n           function(data) {\n               \n               showSuccess('Quantidade alterada com sucesso.');\n               $('.btn-filtrar').click();\n\n           },\n           function(data){\n               $('.btn-filtrar').click();\n           }\n\n       );\n    }\n      \n    function validar_prod(v1,v2,v3,v4,tm,tn,qtd_unim,tid,btn){\n        var frase = '';\n        _tid = tid;\n        _btn = btn;\n        \n        if(v3 > 0 ){\n            frase = '<strong>maior</strong> do que o';\n        }else{\n            frase = '<strong>menor</strong> do que o';\n        }\n        \n        addConfirme('<h4>Registro de Produção</h4>',\n                 ' Foi produzido <input type=\"number\" name=\"quantidade\" class=\"qtd qtd-prod-conf\"'+\n                 ' step=\"1\" value=\"'+(v1).toFixed(2)+'\" style=\"inline-block; width: 95px;\" projetado=\"'+(v2).toFixed(2)+'\" data-tm=\"'+tm+'\" data-tn=\"'+tn+'\" data-qtd-aproveitamento=\"'+v4+'\"> '+\n                 ' , sendo <span class=\"frase-validar\">'+frase+'</span> projetado ou tolerância,<br>que resulta em '+\n                 ' <strong class=\"sobras\">'+v3+' '+qtd_unim+'</strong> '+\n                 ' de <strong>SOBRA</strong>, deseja registrar esses valores?',[obtn_sim,obtn_cancelar],\n                     [\n                         {ret:1,func:function(){\n                              gravar_prod();\n                         }},\n                         {ret:2,func:function(){\n\n                         }}\n                     ]     \n                 );\n         \n                 $( \".qtd-prod-conf\" ).trigger( \"change\" );\n                 $('.qtd-prod-conf').select();\n    }\n    \n    var ret = 0;\n    var sobra_tipo = 'M';\n    \n    function validarRet(data,btn){\n        \n        ret = 0;\n        \n        var cont = 0;\n        $.each(data, function(key, value){\n                           \n            $('._consumo-id').each(function( index ) {\n\n                var consumo_id  =  $( this ).val();\n//                var prod  =  $( this ).val();\n\n                if(consumo_id == data[key]['CONSUMO_ID']){\n                    var obj\t\t\t= $( this ).parent().find('.qtd-total'); // td quantidade consumo\n                    var prd\t\t\t= $( this ).parent().find('.produto').attr('title'); //descrição do produto\n                    var sobra\t\t= $( this ).parent().find('._sobra-material');\n//                    var consumo_id\t= $( this ).parent().find('._consumo-id').val();                     \n                    var txt\t\t\t= $(obj).text();\n                    \n                    if(txt.length > 0){\n                        arryTxt = txt.split(' ');\n                        \n                        arryPrd = prd.split(' - ');\n\n                        if(arryTxt.length > 1){\n                            $(obj).text(data[key]['QUANTIDADE_PROJETADA']+' '+ arryTxt[1]);\n                        }else{\n                            $(obj).text(data[key]['QUANTIDADE_PROJETADA']);   \n                        }\n                        \n                        var p = prd;\n                        if(arryPrd.length > 1){\n                            p = arryPrd[1]; \n                        }\n                       \n                        if(data[key]['QUANTIDADE_SOBRA'] > 0){\n                            \n                            //if (sobra_tipo == 'M'){\n                                \n                                addConfirme('Registro de Produção',\n                                ' Foi calculado uma sobra de '+p+' de <input type=\"number\" name=\"quantidade\" class=\"qtd qtd-sobra-material\" data-consumo-id=\"' + consumo_id + '\"'+\n                                ' step=\"1\" value='+data[key]['QUANTIDADE_SOBRA']+' style=\"inline-block; width: 95px;\" > ',\n                                [\n                                 {desc:'Registrar Sobra',class:'btn-success btn-confirm-sim' ,ret:'1' ,hotkey:'alt+b',glyphicon:'glyphicon-th-large'},\n                                 {desc:'Baixar total',class:'btn-primary btn-confirm-sim' ,ret:'3' ,hotkey:'alt+r',glyphicon:'glyphicon-th'},\n                                 obtn_cancelar\n                                ],\n                                [{ret:1,func:function(e){\n                                    \n                                    var modal = $(e.target).closest('.modal-content');\n                                            \n                                    var sobra = $(modal).find('.qtd-sobra-material').val();\n                                    var consumo_id = $(modal).find('.qtd-sobra-material').data('consumo-id');\n                                    \n                                    var tr_consumo = $('tr[consumo-id=\"' + consumo_id + '\"]');\n                                    \n                                    $(tr_consumo).find('._sobra-material').val(sobra);\n                                    \n                                    gravar_SobraMaterial(consumo_id,sobra);\n                                    \n                                }},{ret:2,func:function(){\n                                    \n                                    vs = 0;\n                                    vt = 0;\n                                    \n                                    gravar_prod();\n                                    \n                                }},{ret:3,func:function(e){\n                                    \n                                    var modal      = $(e.target).closest('.modal-content');\n                                    var consumo_id = $(modal).find('.qtd-sobra-material').data('consumo-id');\n                                    var tr_consumo = $('tr[consumo-id=\"' + consumo_id + '\"]');\n                                    \n                                    $(tr_consumo).find('._sobra-material').val(0);\n                                    \n                                    gravar_SobraMaterial(consumo_id,0);\n                                    \n                                }}]);\n                                \n                                setTimeout(function(){\n                                    $('.qtd-sobra-material').focus();\n                                    $('.qtd-sobra-material').trigger('change');\n                                    $('.qtd-sobra-material').select();  \n                                },1000);\n                                \n                                \n                                \n                            //}else{\n                            //    showErro('Este produto não permite sobra de Meteria prima! SOBRA:' + data[key]['QUANTIDADE']);\n                            //    ret = -1;\n                            //}\n                            \n                        }else{\n                            \n                            if(data[key]['QUANTIDADE_SOBRA'] < 0){\n                                var qtmp = parseFloat(data[key]['QUANTIDADE_SOBRA']);\n                                \n                                addConfirme('Registro de Produção',\n                                ' Foi calculado o uso maior do que o alocado de <input type=\"number\" name=\"quantidade\" class=\"qtd qtd-sobra-material\"'+\n                                ' step=\"1\" value='+qtmp+' style=\"inline-block; width: 95px;\" > de '+p+', Esta correto?',[obtn_sim,obtn_nao],\n                                [{ret:1,func:function(){\n                                    $(sobra).val($('.qtd-sobra-material').attr('valor'));\n                                    \n                                    gravar_SobraMaterial(consumo_id,$('.qtd-sobra-material').attr('valor'));\n                                        \n                                }},\n                                {ret: 2, func: function () {\n                                        \n                                }}]);\n\n                                $('.qtd-sobra-material').trigger('change');\n                                $('.qtd-sobra-material').select();\n                            }else{\n\n                            }\n                        }  \n                        \n                    }else{\n                       if(ret == 0){  \n                            $('.btn-filtrar').click();\n                       }\n                    }\n                    \n                }else{\n                   if(ret == 0){  \n                   //     $('.btn-filtrar').click();\n                   }\n                }\n\n            });\n            \n            cont++;\n        });\n        \n    }\n\n    /**\n    * Gravar quantidade.\n    * \n    * @param {button} btn\n    */\n   function gravar_quantidade_produzida(btn) {\n       \n       \n       var qtd\t\t          = '';\n       var detalhe            = angular.element('#AppCtrl').scope().vm.TalaoDetalhe.SELECTED;\n       var talao_id\t          = $(btn).parent().nextAll('._talao-id').val();\n       var qtd_proj\t          = (detalhe.QUANTIDADE - detalhe.QUANTIDADE_DEFEITO).toFixed(4);\n       var qtd_unim\t          = $(btn).parent().nextAll('._quantidade-projetada-um').val();\n       var qtd_max\t          = $(btn).parent().nextAll('._tolerancia-max').val();\n       var qtd_min\t          = $(btn).parent().nextAll('._tolerancia-min').val();\n       var qtd_tip\t          = $(btn).parent().nextAll('._tolerancia-tip').val();\n           sobra_tipo         = $(btn).parent().nextAll('._sobra-tipo').val();\n       var qtd_aproveitamento = $(btn).parent().nextAll('._quantidade-aproveitamento').val();\n       \n       REMESSA_ID             = $(btn).parent().nextAll('._remessa-id').val();\n       REMESSA_TALAO_ID       = $(btn).parent().nextAll('._remessa-talao-id').val();\n       \n       var cmp_sob = $(btn).parent().nextAll('.sobra-prod');\n       \n       cb = cmp_sob;\n       \n       var input\t\t= '';\n       var url\t\t\t= '/_22020/alterarQtdTalaoDetalhe';\n       var retorno\t\t= '';\n       \n       if ( $(btn).parent('td').hasClass('qtd') ) {\n           input\t= 'input.qtd';\n           retorno = 'QUANTIDADE';\n       }\n       else {\n           input\t= 'input.qtd-alternativa';\n           retorno = 'QUANTIDADE_ALTERNATIVA';\n       }\n\n       qtd\t= $(btn).siblings(input).val();\n\n       //converter antes para reutilizar\n       var valide1 = isNaN(parseFloat(qtd));\n       var valide2 = isNaN(parseFloat(qtd_proj));\n       var valide3 = isNaN(parseFloat(qtd_aproveitamento));\n       \n       //converter antes para reutilizar\n       var v1 = parseFloat(qtd);\n       var v2 = parseFloat(qtd_proj);\n       var v4 = parseFloat(qtd_aproveitamento);\n       \n\t   // Qtd. Proj.  |  Qtd. Aprov.  |  Qtd. Prod.\n\t   //        50   |          20   |         10\n\t   //\t\n\t   // 10 - (50 - 20) = -20 SOBRA      \n\t   //  \n\t   // Qtd. Proj.  |  Qtd. Aprov.  |  Qtd. Prod.\n\t   //        50   |          20   |         30\n\t   //\t\n\t   // 30 - (50 - 20) = 0 SOBRA\n\t   //  \n\t   // Qtd. Proj.  |  Qtd. Aprov.  |  Qtd. Prod.\n\t   //        50   |          20   |         40\n\t   //\t\n\t   // 40 - (50 - 20) = 10 SOBRA\n\n       var v3 = (v1-(v2-v4)).toFixed(2);\n       \n       if ( (valide1 === false) && (valide2 === false) && (valide3 === false)){\n        \n            if( qtd_tip == 'Q'){\n                var toleranciamais = parseFloat(qtd_max);\n                var toleranciamens = parseFloat(qtd_min) * -1;\n            }else{\n                if( qtd_tip == 'P'){\n                    var toleranciamais = parseFloat((qtd_max/100)*v2);\n                    var toleranciamens = parseFloat((qtd_min/100)*v2) * -1;\n                }else{\n                    var toleranciamais = parseFloat(999999);\n                    var toleranciamens = parseFloat(999999) * -1;\n                }\n            }\n            \n            console.log('Tolerancia Mais:'+toleranciamais);\n            console.log('Tolerancia Menos:'+toleranciamens);\n            console.log('Dif:'+v3);\n        \n            if ((v3 > toleranciamais) || (v3 < toleranciamens) && (v1 > 0)) {\n                 \n                if (sobra_tipo == 'P'){\n                    if (v1 > 0){\n                        validar_prod(v1,v2,v3,v4,toleranciamais,toleranciamens,qtd_unim,talao_id,btn);\n                    }\n                }else{\n                    showErro('Este produto não permite sobra de Produção!');\n                }\n\n            }else{\n\n                execAjax1(\n                    'POST',\n                    url, \n                    { \n                        retorno\t\t\t\t: retorno,\n                        qtd\t\t\t\t\t: qtd,\n                        sbr\t\t\t\t\t: 0,\n                        talao_detalhe_id\t: talao_id,\n                        REMESSA_ID          : REMESSA_ID,\n                        REMESSA_TALAO_ID    : REMESSA_TALAO_ID\n                    },\n                    function(data) {\n                        \n                        if(v1 > 0){\n                            validarRet(data,btn);\n                        }\n                        \n                        if(ret == 0){\n                            \n                            $(btn)\n                                .siblings('span.valor')\n                                .empty()\n                                .text( formataPadraoBr(qtd) )\n                                .show()\n                            ;\n\n                            $(cb).empty().text(0);\n\n                            var btn_parent\t= $(btn).parent();\n                            var th_qtd = '';\n\n                            if (input === 'input.qtd') {\n\n                                th_qtd\t\t\t\t\t= 'th.qtd';\n                                var input_qtd\t\t\t= $(btn_parent).siblings('._quantidade');\n\n                                $(input_qtd)\n                                    .val(qtd)\n                                ;\n\n                            }\n                            else {\n\n                                th_qtd\t\t\t\t\t\t\t= 'th.qtd-alternativa';\n                                var input_qtd\t\t\t\t\t= $(btn_parent).siblings('._quantidade-alternativa');\n                                var qtd_projetada_altern_val\t= $(btn_parent).siblings('._quantidade-projetada-altern').val();\n                                var qtd_produzida_altern_val\t= qtd;\n                                var aproveitamento_altern_val\t= $(btn_parent).siblings('._quantidade-aproveitamento-altern').val();\n\n                                var saldo_altern\t\t\t\t= qtd_projetada_altern_val - qtd_produzida_altern_val - aproveitamento_altern_val;\n                                saldo_altern\t\t\t\t\t= formataPadraoBr(saldo_altern.toFixed('4'));\n\n                                $(btn_parent)\n                                    .siblings('.saldo')\n                                    .text( saldo_altern )\n                                ;\n\n                                $(input_qtd)\n                                    .val(qtd)\n                                ;\n\n                            }\n\n                            $('#detalhe')\n                                .find(th_qtd)\n                                .removeClass('editando')\n                            ;\n\n                            $(btn)\n                                .parent()\n                                .removeClass('editando')\n                            ;\n\n                            $(btn)\n                                .hide()\n                            ;\n\n                            $(btn)\n                                .siblings('button.qtd-cancelar')\n                                .hide()\n                            ;\n\n                            $(btn)\n                                .siblings(input)\n                                .attr('max', qtd)\n                                .hide()\n                            ;\n\n                            $(btn)\n                                .siblings('button.qtd-editar')\n                                .show()\n                            ;\n\n                            $('.table-talao-produzir')\n                                .trigger('resize')\n                            ; \n\n                            $('.btn-filtrar').click();\n\n                            showSuccess('Quantidade alterada com sucesso.');\n                        }else{\n                            ret = 0;\n                        }\n                    }\n\n                );\n            }\n       }\n   }\n\n(function($) {\n    \n    function tratarprod(e){\n        var prod = $(e).val();\n        var proj = $(e).attr('projetado');\n        var qtd_aproveitamento = $(e).data('qtd-aproveitamento');\n        \n        var tm = parseFloat($(e).data('tm'));\n        var tn = parseFloat($(e).data('tn'));\n        \n        var v1 = parseFloat(prod);\n        var v2 = parseFloat(proj);\n\t\tvar v4 = parseFloat(qtd_aproveitamento);\n        \n        var valide1 = isNaN(v1);\n        var valide2 = isNaN(v2);\n        var valide3 = isNaN(v4);\n        \n        var v3 = (v1-(v2-v4)).toFixed(2);\n       \n       if ( (valide1 === false) && (valide2 === false) && (valide3 === false)){\n            \n            if(v3 >= 0){\n                var v1 = (v3 < tm);\n            }else{\n                var v1 = (v3 > tn);\n            }\n\n            if (v1 == true) {\n                \n               $('.sobras').html(0);\n               vp = prod;\n               vt = parseFloat(prod);\n               vs = 0;\n                    \n               $('.btn-confirm-sim').removeAttr('disabled');\n               $('.frase-validar').html('<strong>igual</strong> ao');\n               //$('.qtd-gravar').removeAttr('disabled');\n               \n            }else{\n                //showErro('Valor fora da tolerância!');\n                \n                if(v3 > 0){\n                    $('.sobras').html(v3);\n                    vp = prod;\n                    vt = parseFloat(prod)-parseFloat(v3);\n                    vs = v3;\n                    \n                    $('.btn-confirm-sim').removeAttr('disabled');\n                    $('.frase-validar').html('<strong>maior</strong> do que o');\n                    //$('.qtd-gravar').removeAttr('disabled');\n                }else{\n                    $('.sobras').html(0);\n                    vp = prod;\n                    vt = parseFloat(prod);\n                    vs = 0;\n                    \n                    $('.btn-confirm-sim').attr('disabled','disabled');\n                    $('.frase-validar').html('<strong>menor</strong> do que o');\n                    //$('.qtd-gravar').attr('disabled','disabled');\n                }\n                \n                return false;\n            }\n            \n       }else{\n            //showErro('Valor invalido na projeção ou na quantidade produsida!');\n            return false;\n       }\n        \n    };\n    \n    $(document).on('change','.qtd-prod-conf', function(e) {\n\n        tratarprod(this);\n    \n    });\n    \n    $(document).on('change','.qtd', function(e) {\n        \n        //tratarprod(this);\n    \n    });\n    \n    $(document).on('change','.qtd-sobra-material', function(e) {\n        \n        $('.qtd-sobra-material').attr('valor',$(this).val());\n    \n    });\n    \n    \n    \n\t\n})(jQuery);\n"]}
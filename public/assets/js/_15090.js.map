{"version":3,"sources":["_15090.app.js","_15090.factory.conferencia.js","_15090.factory.filtro.js","_15090.controller.js"],"names":[],"mappingslTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"_15090.js","sourcesContent":["'use strict';\n\nangular\n\t.module('app', [\n\t\t'vs-repeat', \n        'gc-find',\n\t\t'gc-ajax',\n\t\t'gc-transform',\n\t\t'gc-form',\n\t\t'gc-utils'\n\t])\n;\n     ","angular\n    .module('app')\n    .factory('Conferencia', Conferencia);\n    \n\n\tConferencia.$inject = [\n        '$ajax',\n        '$httpParamSerializer',\n        '$rootScope',\n        '$q',\n        '$timeout',\n        'gcCollection',\n        'gScope'\n    ];\n\nfunction Conferencia($ajax, $httpParamSerializer, $rootScope, $q, $timeout, gcCollection, gScope) {\n\n    /**\n     * Constructor, with class name\n     */\n    function Conferencia(data) {\n        if (data) {\n            this.setData(data);\n        }\n        \n\t\tgScope.Conferencia = this; \n        \n        this.DADOS     = [];\n        this.SELECTED  = {};\n        this.ITENS     = [];\n        this.PENDENTES = [];\n        this.PENDENTESLOTE = [];\n        this.GRUPOS    = [];\n        this.GRUPOS2   = [];\n        this.FILTRO    = '';\n\n        this.DATA1     = '01.10.2017';\n        this.DATA2     = '26.10.2017';\n\n        this.OPERADOR_BARRAS = '';\n    }\n    \n\n    Conferencia.prototype.pick = function(item,action) {\n        \n        var that = this;\n\n        if ( item != undefined ) {\n        \n            this.SELECTED = item;\n\n        }\n\n    };     \n       \n\n    Conferencia.prototype.confirmar = function() {\n        \n        var that = this;\n\n        var data = {\n            ITENS            : this.ITENS,\n            OPERADOR_BARRAS  : this.OPERADOR_BARRAS,\n            CODIGO_BARRAS    : gScope.Filtro.CODIGO_BARRAS,\n            CONFERENCIA_TIPO : gScope.Filtro.CONFERENCIA_TIPO\n        };\n        \n        $ajax.post('/_15090/api/conferencia/confirmar',data)\n            .then(function(response) {\n        \n                that.ITENS = [];\n                gScope.Filtro.merge(response.DATA_RETURN);\n                that.modalOperador.hide(function(){\n//                    that.clearData();\n                });\n                \n            })\n            .catch(function() {\n                that.OPERADOR_BARRAS = '';\n                $('#modal-autenticar-operador').find('input:focusable').first().focus();\n            })\n        ;\n\n    };     \n       \n\n    Conferencia.prototype.toggleCheck = function(item,type) {\n              \n        if ( item.CONFERENCIA > 0 ) {  \n            item.CONFERIR = (item.CONFERIR == '2') ? '1' : '2';\n\n            if ( type != undefined ) {\n                item.CONFERIR = type == true ? '2' : '1';\n            }\n            \n            var index = this.ITENS.indexOf(item);\n                \n            if ( item.CONFERIR != item.CONFERENCIA ) {\n                if ( index == -1 ) {\n                    this.ITENS.push(item);   \n                }                 \n            } else {\n                if ( index > -1 ) {\n                    this.ITENS.splice(index, 1);                      \n                }\n            }\n            \n        }\n    };     \n\n    Conferencia.prototype.checkAll = function() {\n                \n        for ( var i in this.DADOS ) {\n            var item = this.DADOS[i];\n            \n            this.toggleCheck(item,true);\n        }\n    };\n\n    Conferencia.prototype.Conferir = function(COD_BARRAS,TIPO) {\n\n        $('#tab1-tab').trigger('click');\n\n            gScope.Filtro.CONFERENCIA_TIPO = TIPO;\n            gScope.Filtro.CODIGO_BARRAS    = COD_BARRAS;\n            gScope.Filtro.consultar();\n\n    };\n\n    Conferencia.prototype.checkVisibility = function(item) {\n        \n        var that = this;\n        var ret  = true;\n        \n        for ( var i in that.GRUPOS ) {\n            var grupo = that.GRUPOS[i];\n            \n            if ( grupo.VALOR == (item.TIPO + ' ').trim() ) {\n                if ( !grupo.CHECKED ) {\n                    ret = false;\n                }\n                break;\n            }\n        }\n        \n        return ret;\n    };\n\n    Conferencia.prototype.checkVisibility2 = function(item) {\n        \n        var that = this;\n        var ret  = true;\n        \n        for ( var i in that.GRUPOS2 ) {\n            var grupo = that.GRUPOS2[i];\n            \n            if ( grupo.VALOR == (item.FAMILIA + ' ').trim() ) {\n                if ( !grupo.CHECKED ) {\n                    ret = false;\n                }\n                break;\n            }\n        }\n        \n        return ret;\n    };\n\n    Conferencia.prototype.pendencias = function() {\n        var that = this;\n\n        $ajax.post('/_15090/api/conferencia/pendentes',that).then(function(response){\n\n//            that.PENDENTES = response;\n\n            angular.forEach(response, function(item, key) {\n                var adicionar = true;\n                angular.forEach(that.GRUPOS, function(iten, key) {\n                    if((item.TIPO + ' ').trim() == iten.VALOR){\n                        adicionar = false;\n                    }\n                });\n\n                if(adicionar == true){\n                    that.GRUPOS.push({VALOR: (item.TIPO + ' ').trim(), CHECKED: true});\n                }\n            });\n\n            angular.forEach(response, function(item, key) {\n                var adicionar = true;\n                angular.forEach(that.GRUPOS2, function(iten, key) {\n                    if((item.FAMILIA + ' ').trim() == iten.VALOR){\n                        adicionar = false;\n                    }\n                });\n\n                if(adicionar == true){\n                    that.GRUPOS2.push({VALOR: (item.FAMILIA + ' ').trim(), CHECKED: true});\n                }\n            });\n\n            var grupos = gcCollection.groupBy(response, [\n                'GRUPO',\n                'TIPO_ID',\n                'DOCUMENTO',\n                'TIPO',\n                'LOCALIZACAO'\n            ], 'ITENS'); \n            \n            gcCollection.merge(that.PENDENTES, grupos, ['GRUPO']);\n       \n        });\n\n    };\n\n    Conferencia.prototype.pendenciasLote = function() {\n        var that = this;\n\n        $ajax.post('/_15090/api/conferencia/pendenciasLote',that).then(function(response){\n            that.PENDENTESLOTE = response;\n        });\n\n    };         \n    \n    \n    Conferencia.prototype.clearData = function() {\n        gScope.Filtro.CODIGO_BARRAS = ''; \n        this.DADOS = []; \n        this.ITENS = [];\n        \n        $('.input-codigo-barras:focusable').first().focus();\n    };     \n    \n    \n\n    Conferencia.prototype.keypress = function(item,$event) {\n        \n        if ( $event.key == ' ' ) {\n            \n            $event.preventDefault();\n            \n            this.toggleCheck(item);\n        } else        \n        if ( $event.key == 'Enter' ) {\n            \n            $event.preventDefault();\n            \n            \n            if ( this.ITENS.length > 0) {\n                this.modalOperador.show();\n            }\n        }\n    };     \n\n    Conferencia.prototype.modalOperador = {\n        _modal : function () {\n            return $('#modal-autenticar-operador');\n        },\n        show : function(shown,hidden) {\n\n            this._modal()\n                .modal('show')\n            ;                         \n\n            \n            this._modal()\n                .one('shown.bs.modal', function(){\n\n                    $(this).find('input:focusable').first().focus();\n\n                    if ( shown ) {\n                        shown(); \n                    }\n                })\n            ;    \n\n                this._modal()\n                    .one('hidden.bs.modal', function(){\n                        gScope.Conferencia.OPERADOR_BARRAS = '';\n                \n                        if ( hidden ) {\n                            hidden();      \n                        }\n                    })\n                ;        \n        },\n        hide : function(hidden) {\n\n            this._modal()\n                .modal('hide')\n            ;\n\n            if ( hidden ) {\n                this._modal()\n                    .one('hidden.bs.modal', function(){\n                        hidden ? hidden() : '';\n                    })\n                ;                      \n            }\n        }\n    };     \n    \n    \n    /**\n     * Return the constructor function\n     */\n    return Conferencia;\n};","angular\n    .module('app')\n    .factory('Filtro', Filtro);\n    \n\n\tFiltro.$inject = [\n        '$ajax',\n        '$httpParamSerializer',\n        '$rootScope',\n        '$q',\n        '$timeout',\n        'gcCollection',\n        'gScope'\n    ];\n\nfunction Filtro($ajax, $httpParamSerializer, $rootScope, $q, $timeout, gcCollection, gScope) {\n\n    /**\n     * Constructor, with class name\n     */\n    function Filtro(data) {\n        if (data) {\n            this.setData(data);\n        }\n        \n\t\tgScope.Filtro = this; \n        \n        this.CODIGO_BARRAS = '';\n    }\n    \n    Filtro.prototype.consultar = function() {\n        \n        var that = this;\n        \n        return $q(function(resolve,reject){\n\n            $ajax.post('/_15090/api/conferencia/itens',that).then(function(response){\n\n                that.merge(response);\n\n                resolve(response);\n            },function(){\n                reject(reject);\n            });\n        });\n    };\n   \n    \n    Filtro.prototype.merge = function(response) {\n        \n        function isNumber(n) {\n            return !isNaN(parseFloat(n)) && isFinite(n);\n        }\n\n        for ( var i in response ) {\n            var item = response[i];\n            \n            for (var k in item){\n                if (item.hasOwnProperty(k)) {\n                    \n                    if ( isNumber(item[k]) && (String(item[k]).substr(0, 1) !== '0' || String(item[k]).indexOf('.') !== -1) ) {               \n                        item[k] = parseFloat(item[k]);\n                    }\n                }\n            }            \n        }\n        \n        gcCollection.merge(gScope.Conferencia.DADOS, response, [\n            'PRODUTO_ID',\n            'TAMANHO',\n            'PECA_ID'\n        ]);\n\n        for ( var i in gScope.Conferencia.DADOS ) {\n            var item = gScope.Conferencia.DADOS[i];\n            \n            item.CONFERIR = item.CONFERENCIA;\n        }\n\n    };\n\n    /**\n     * Return the constructor function\n     */\n    return Filtro;\n};","angular\n    .module('app')\n    .value('gScope', {})\n    .controller('Ctrl', Ctrl);\n    \n    \n\tCtrl.$inject = [\n        '$scope',\n        '$timeout',\n        'Filtro',\n        'Conferencia'\n    ];\n\n\tfunction Ctrl( \n        $scope, \n        $timeout, \n        Filtro,\n        Conferencia\n    ) {\n\n\t\tvar vm = this;\n\n\t\tvm.Filtro      = new Filtro();\n\t\tvm.Conferencia = new Conferencia();\n\n\n\t}   \n  "]}
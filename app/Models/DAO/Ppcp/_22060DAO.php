<?php

namespace App\Models\DAO\Ppcp;

use App\Models\Conexao\_Conexao;
use App\Models\DTO\Ppcp\_22060;

class _22060DAO
{		
	public static function filtrarEstabelecimento(_22060 $obj) {
		
		$con = new _Conexao();
		
		$estab = !empty($obj->getEstabelecimentoId()) ? 'AND CODIGO = '. $obj->getEstabelecimentoId() : '';
		
		$sql = "
			SELECT 
				LPAD(CODIGO, 2, 0) CODIGO, 
				RAZAOSOCIAL, 
				NOMEFANTASIA
				
			FROM
				TBESTABELECIMENTO
				
			WHERE
				1=1
			/*@CODIGO*/
			
			ORDER BY CODIGO
		";
				
		$args = [
			'@CODIGO' => $estab
		];
		
		return $con->query($sql, $args);
	}
	
	public static function filtrarGp(_22060 $obj) {
		
		$con = new _Conexao();
		
		$gp_id = !empty($obj->getGpId()) ? 'AND T.GP_ID = '. $obj->getGpId() : '';
		
		$sql = "
			SELECT
				LPAD(G.ID, 3, 0) GP_ID,
				G.DESCRICAO GP_DESCRICAO,
				IIF(COALESCE(F.UNIDADEMEDIDA_ALTERNATIVO, '') <> '', F.UNIDADEMEDIDA_ALTERNATIVO, F.UNIDADEMEDIDA_SIGLA) UM,
				QUANTIDADE_PRODUZIDA,
				QUANTIDADE_ABERTA,
				QUANTIDADE_ABERTA_HOJE,
				QUANTIDADE_ABERTA_ATRASADA

			FROM
				TBGP G,
				TBFAMILIA F,

				(SELECT
					T.GP_ID,

					SUM(IIF(CAST(P.DATAHORA_INICIO AS DATE) BETWEEN DT.DATA_INICIAL AND DT.DATA_FINAL AND T.STATUS = '2',
						IIF(COALESCE(D.QUANTIDADE_ALTERN_PRODUCAO,0) > 0, D.QUANTIDADE_ALTERN_PRODUCAO, COALESCE(D.QUANTIDADE_PRODUCAO ,0)), 0)) QUANTIDADE_PRODUZIDA,

					SUM(IIF(CAST(P.DATAHORA_INICIO AS DATE) BETWEEN DT.DATA_INICIAL AND DT.DATA_FINAL AND T.STATUS = '1',
						IIF(COALESCE(D.QUANTIDADE_ALTERN,0) > 0, D.QUANTIDADE_ALTERN, COALESCE(D.QUANTIDADE,0)), 0)) QUANTIDADE_ABERTA,

					SUM(IIF(CAST(P.DATAHORA_INICIO AS DATE) = CURRENT_DATE AND T.STATUS = '1',
						IIF(COALESCE(D.QUANTIDADE_ALTERN,0) > 0, D.QUANTIDADE_ALTERN, COALESCE(D.QUANTIDADE,0)), 0)) QUANTIDADE_ABERTA_HOJE,

					SUM(IIF(CAST(P.DATAHORA_INICIO AS DATE) BETWEEN DT.DATA_INICIAL AND IIF(DT.DATA_FINAL >= CURRENT_DATE, CURRENT_DATE - 1, DT.DATA_FINAL) AND T.STATUS = '1',
						IIF(COALESCE(D.QUANTIDADE_ALTERN,0) > 0, D.QUANTIDADE_ALTERN, COALESCE(D.QUANTIDADE,0)), 0)) QUANTIDADE_ABERTA_ATRASADA

				FROM
					VWREMESSA_TALAO T
					INNER JOIN VWREMESSA_TALAO_DETALHE D ON D.REMESSA_ID = T.REMESSA_ID AND D.REMESSA_TALAO_ID = T.REMESSA_TALAO_ID
					INNER JOIN TBPROGRAMACAO P ON P.TABELA_ID = T.ID,
					(SELECT CAST(:DATA_INICIAL AS DATE) DATA_INICIAL, CAST(:DATA_FINAL AS DATE) DATA_FINAL FROM RDB". '$DATABASE' .") DT
				WHERE
					1=1
				/*@GP_ID*/

				GROUP BY 1
				) A

			WHERE
				G.ID = A.GP_ID
			AND F.CODIGO = G.FAMILIA_ID
		";
		
		$args = [
			'@GP_ID'		=> $gp_id,
			':DATA_INICIAL'	=> $obj->getDataInicial(),
			':DATA_FINAL'	=> $obj->getDataFinal()
		];
			
		return $con->query($sql, $args);
	}
	
	public static function filtrarUp(_22060 $obj) {
		
		$con = new _Conexao();
		
		$gp_id	= !empty($obj->getGpId()) ? 'AND T.GP_ID = '. $obj->getGpId() : '';
		$up_id	= !empty($obj->getUpId()) ? 'AND T.UP_ID = '. $obj->getUpId() : '';
		
		$sql = "
			SELECT
				LPAD(U.ID, 3 ,0) UP_ID,
				U.DESCRICAO UP_DESCRICAO,
				IIF(COALESCE(F.UNIDADEMEDIDA_ALTERNATIVO, '') <> '', F.UNIDADEMEDIDA_ALTERNATIVO, F.UNIDADEMEDIDA_SIGLA) UM,

				SUM(IIF(CAST(P.DATAHORA_INICIO AS DATE) BETWEEN DT.DATA_INICIAL AND DT.DATA_FINAL AND T.STATUS = '2',
					IIF(COALESCE(D.QUANTIDADE_ALTERN_PRODUCAO,0) > 0, D.QUANTIDADE_ALTERN_PRODUCAO, COALESCE(D.QUANTIDADE_PRODUCAO ,0)), 0)) QUANTIDADE_PRODUZIDA,

				SUM(IIF(CAST(P.DATAHORA_INICIO AS DATE) BETWEEN DT.DATA_INICIAL AND DT.DATA_FINAL AND T.STATUS = '1',
					IIF(COALESCE(D.QUANTIDADE_ALTERN,0) > 0, D.QUANTIDADE_ALTERN, COALESCE(D.QUANTIDADE,0)), 0)) QUANTIDADE_ABERTA,

				SUM(IIF(CAST(P.DATAHORA_INICIO AS DATE) = CURRENT_DATE AND T.STATUS = '1',
					IIF(COALESCE(D.QUANTIDADE_ALTERN,0) > 0, D.QUANTIDADE_ALTERN, COALESCE(D.QUANTIDADE,0)), 0)) QUANTIDADE_ABERTA_HOJE,

				SUM(IIF(CAST(P.DATAHORA_INICIO AS DATE) BETWEEN DT.DATA_INICIAL AND IIF(DT.DATA_FINAL >= CURRENT_DATE, CURRENT_DATE - 1, DT.DATA_FINAL) AND T.STATUS = '1',
					IIF(COALESCE(D.QUANTIDADE_ALTERN,0) > 0, D.QUANTIDADE_ALTERN, COALESCE(D.QUANTIDADE,0)), 0)) QUANTIDADE_ABERTA_ATRASADA

			FROM
				TBUP U
				INNER JOIN TBGP_UP G ON G.UP_ID = U.ID
				INNER JOIN VWREMESSA_TALAO T ON T.GP_ID = G.GP_ID AND T.UP_ID = G.UP_ID
				INNER JOIN VWREMESSA_TALAO_DETALHE D ON D.REMESSA_ID = T.REMESSA_ID AND D.REMESSA_TALAO_ID = T.REMESSA_TALAO_ID
				INNER JOIN TBPROGRAMACAO P ON P.TABELA_ID = T.ID
				INNER JOIN TBPRODUTO PR ON PR.CODIGO = D.PRODUTO_ID
                INNER JOIN TBFAMILIA F ON F.CODIGO = PR.FAMILIA_CODIGO,
			   (SELECT CAST(:DATA_INICIAL AS DATE) DATA_INICIAL, CAST(:DATA_FINAL AS DATE) DATA_FINAL FROM ".'RDB$DATABASE'.") DT

			WHERE
				 1=1
			/*@GP_ID*/
			/*@UP_ID*/

			GROUP BY 1,2,3
		";
		
		$args = [
			'@GP_ID'		=> $gp_id,
			'@UP_ID'		=> $up_id,
			':DATA_INICIAL'	=> $obj->getDataInicial(),
			':DATA_FINAL'	=> $obj->getDataFinal()
		];
				
		return $con->query($sql, $args);
	}

	public static function filtrarEstacao(_22060 $obj) {
		
		$con = new _Conexao();
		
		$gp_id		= !empty($obj->getGpId()) ? 'AND T.GP_ID = '. $obj->getGpId() : '';
		$up_id		= !empty($obj->getUpId()) ? 'AND T.UP_ID = '. $obj->getUpId() : '';
		
		$sql = "
			SELECT
				LPAD(S.ID, 3, 0) ESTACAO_ID,
				S.DESCRICAO ESTACAO_DESCRICAO,
				IIF(COALESCE(F.UNIDADEMEDIDA_ALTERNATIVO, '') <> '', F.UNIDADEMEDIDA_ALTERNATIVO, F.UNIDADEMEDIDA_SIGLA) UM,

				SUM(IIF(CAST(P.DATAHORA_INICIO AS DATE) BETWEEN DT.DATA_INICIAL AND DT.DATA_FINAL AND T.STATUS = '2',
					IIF(COALESCE(D.QUANTIDADE_ALTERN_PRODUCAO,0) > 0, D.QUANTIDADE_ALTERN_PRODUCAO, COALESCE(D.QUANTIDADE_PRODUCAO ,0)), 0)) QUANTIDADE_PRODUZIDA,

				SUM(IIF(CAST(P.DATAHORA_INICIO AS DATE) BETWEEN DT.DATA_INICIAL AND DT.DATA_FINAL AND T.STATUS = '1',
					IIF(COALESCE(D.QUANTIDADE_ALTERN,0) > 0, D.QUANTIDADE_ALTERN, COALESCE(D.QUANTIDADE,0)), 0)) QUANTIDADE_ABERTA,

				SUM(IIF(CAST(P.DATAHORA_INICIO AS DATE) = CURRENT_DATE AND T.STATUS = '1',
					IIF(COALESCE(D.QUANTIDADE_ALTERN,0) > 0, D.QUANTIDADE_ALTERN, COALESCE(D.QUANTIDADE,0)), 0)) QUANTIDADE_ABERTA_HOJE,

				SUM(IIF(CAST(P.DATAHORA_INICIO AS DATE) BETWEEN DT.DATA_INICIAL AND IIF(DT.DATA_FINAL >= CURRENT_DATE, CURRENT_DATE - 1, DT.DATA_FINAL) AND T.STATUS = '1',
					IIF(COALESCE(D.QUANTIDADE_ALTERN,0) > 0, D.QUANTIDADE_ALTERN, COALESCE(D.QUANTIDADE,0)), 0)) QUANTIDADE_ABERTA_ATRASADA

			FROM
				TBSUB_UP S
				INNER JOIN TBUP U ON U.ID = S.UP_ID
				INNER JOIN VWREMESSA_TALAO T ON T.UP_ID = S.UP_ID AND T.ESTACAO = S.ID
				INNER JOIN VWREMESSA_TALAO_DETALHE D ON D.REMESSA_ID = T.REMESSA_ID AND D.REMESSA_TALAO_ID = T.REMESSA_TALAO_ID
				INNER JOIN TBPROGRAMACAO P ON P.TABELA_ID = T.ID
				INNER JOIN TBPRODUTO PR ON PR.CODIGO = D.PRODUTO_ID
				INNER JOIN TBFAMILIA F ON F.CODIGO = PR.FAMILIA_CODIGO,
			   (SELECT CAST(:DATA_INICIAL AS DATE) DATA_INICIAL, CAST(:DATA_FINAL AS DATE) DATA_FINAL FROM ". 'RDB$DATABASE' .") DT

			WHERE
				 1=1
			/*@GP_ID*/
			/*@UP_ID*/

			GROUP BY 1,2,3
		";
		
		$args = [
			'@GP_ID'		=> $gp_id,
			'@UP_ID'		=> $up_id,
			':DATA_INICIAL'	=> $obj->getDataInicial(),
			':DATA_FINAL'	=> $obj->getDataFinal()
		];
		
		return $con->query($sql, $args);
	}
	
	public static function filtrarTalao(_22060 $obj) {
		
		$con = new _Conexao();
		
		$gp_id		= !empty($obj->getGpId())		? 'AND T.GP_ID = '. $obj->getGpId()			: '';
		$up_id		= !empty($obj->getUpId())		? 'AND T.UP_ID = '. $obj->getUpId()			: '';
		$estacao_id	= !empty($obj->getEstacaoId())	? 'AND T.ESTACAO = '. $obj->getEstacaoId()	: '';
		
		$sql = "
			SELECT
				LPAD(X.TALAO_ID, 6, 0) TALAO_ID,
				LPAD(X.MODELO_ID, 5, 0) MODELO_ID,
				X.MODELO_DESCRICAO,
				X.DENSIDADE,
				X.ESPESSURA,
				X.STATUS,
				X.STATUS_DESCRICAO,
				X.UM,
				X.QUANTIDADE_PRODUZIDA,
				X.QUANTIDADE_ABERTA,
				X.QUANTIDADE_ABERTA_HOJE,
				X.QUANTIDADE_ABERTA_ATRASADA
			FROM(
				SELECT
					T.ID TALAO_ID,
					T.MODELO_ID,
					(SELECT M.DESCRICAO FROM TBMODELO M WHERE M.CODIGO = T.MODELO_ID) MODELO_DESCRICAO,
					T.DENSIDADE,
					T.ESPESSURA,
					T.STATUS,
					(CASE
						T.STATUS
					WHEN 1 THEN 'EM ABERTO'
					WHEN 2 THEN 'PRODUZIDO'
					WHEN 3 THEN 'LIBERADO'
					ELSE 'INDEFINIDO' END) STATUS_DESCRICAO,
					IIF(COALESCE(F.UNIDADEMEDIDA_ALTERNATIVO, '') <> '', F.UNIDADEMEDIDA_ALTERNATIVO, F.UNIDADEMEDIDA_SIGLA) UM,

					SUM(IIF(CAST(P.DATAHORA_INICIO AS DATE) BETWEEN DT.DATA_INICIAL AND DT.DATA_FINAL AND T.STATUS = '2',
						IIF(COALESCE(D.QUANTIDADE_ALTERN_PRODUCAO,0) > 0, D.QUANTIDADE_ALTERN_PRODUCAO, COALESCE(D.QUANTIDADE_PRODUCAO ,0)), 0)) QUANTIDADE_PRODUZIDA,

					SUM(IIF(CAST(P.DATAHORA_INICIO AS DATE) BETWEEN DT.DATA_INICIAL AND DT.DATA_FINAL AND T.STATUS = '1',
						IIF(COALESCE(D.QUANTIDADE_ALTERN,0) > 0, D.QUANTIDADE_ALTERN, COALESCE(D.QUANTIDADE,0)), 0)) QUANTIDADE_ABERTA,

					SUM(IIF(CAST(P.DATAHORA_INICIO AS DATE) = CURRENT_DATE AND T.STATUS = '1',
						IIF(COALESCE(D.QUANTIDADE_ALTERN,0) > 0, D.QUANTIDADE_ALTERN, COALESCE(D.QUANTIDADE,0)), 0)) QUANTIDADE_ABERTA_HOJE,

					SUM(IIF(CAST(P.DATAHORA_INICIO AS DATE) BETWEEN DT.DATA_INICIAL AND IIF(DT.DATA_FINAL >= CURRENT_DATE, CURRENT_DATE - 1, DT.DATA_FINAL) AND T.STATUS = '1',
						IIF(COALESCE(D.QUANTIDADE_ALTERN,0) > 0, D.QUANTIDADE_ALTERN, COALESCE(D.QUANTIDADE,0)), 0)) QUANTIDADE_ABERTA_ATRASADA

				FROM
					VWREMESSA_TALAO T
					INNER JOIN VWREMESSA_TALAO_DETALHE D ON D.REMESSA_ID = T.REMESSA_ID AND D.REMESSA_TALAO_ID = T.REMESSA_TALAO_ID
					INNER JOIN TBPROGRAMACAO P ON P.TABELA_ID = T.ID
					INNER JOIN TBPRODUTO PR ON PR.CODIGO = D.PRODUTO_ID
					INNER JOIN TBFAMILIA F ON F.CODIGO = PR.FAMILIA_CODIGO,
				   (SELECT CAST(:DATA_INICIAL AS DATE) DATA_INICIAL, CAST(:DATA_FINAL AS DATE) DATA_FINAL FROM ". 'RDB$DATABASE' .") DT

				WHERE
					 1=1
				/*@GP_ID*/
				/*@UP_ID*/
				/*@ESTACAO_ID*/

				GROUP BY 1,2,3,4,5,6,7,8
			) X
		";
				
		$args = [
			'@GP_ID'		=> $gp_id,
			'@UP_ID'		=> $up_id,
			'@ESTACAO_ID'	=> $estacao_id,
			':DATA_INICIAL'	=> $obj->getDataInicial(),
			':DATA_FINAL'	=> $obj->getDataFinal()
		];
		
		return $con->query($sql, $args);
	}
	
	public static function filtrarTalaoDetalhe(_22060 $obj) {
		
		$con = new _Conexao();
		
		$gp_id		= !empty($obj->getGpId())		? 'AND T.GP_ID = '. $obj->getGpId() : '';
		$up_id		= !empty($obj->getUpId())		? 'AND T.UP_ID = '. $obj->getUpId() : '';
		$talao_id	= !empty($obj->getTalaoId())	? 'AND T.ID = '. $obj->getTalaoId() : '';
		$data		= !empty($obj->getDataInicial()) && !empty($obj->getDataFinal())
						? 'AND (P.DATAHORA_INICIO BETWEEN \''. $obj->getDataInicial() .'\' AND \''. $obj->getDataFinal() .'\')'
						: '';
		
		$sql = "
			SELECT
				LPAD(D.ID, 8, 0) ID,
				D.STATUS STATUS_DETALHE,
				(CASE
					D.STATUS
				WHEN 1 THEN 'EM ABERTO'
				WHEN 2 THEN 'EM PRODUÇÃO'
				WHEN 3 THEN 'PRODUZIDO'
				WHEN 6 THEN 'ENCERRADO'
				ELSE 'INDEFINIDO' END) STATUS_DETALHE_DESCRICAO,
				LPAD(D.PRODUTO_ID, 6, 0) PRODUTO_ID,
				PR.DESCRICAO PRODUTO_DESCRICAO,
				LPAD(D.COR_ID, 4, 0) COR_ID,
				(SELECT C.DESCRICAO FROM TBCOR C WHERE C.CODIGO = D.COR_ID) COR_DESCRICAO,
				D.TAMANHO,
				IIF(COALESCE(D.QUANTIDADE_ALTERN, 0) > 0, D.QUANTIDADE_ALTERN, COALESCE(D.QUANTIDADE, 0)) QUANTIDADE_PROJETADA,
				IIF(COALESCE(D.QUANTIDADE_ALTERN_PRODUCAO, 0) > 0, D.QUANTIDADE_ALTERN_PRODUCAO, COALESCE(D.QUANTIDADE_PRODUCAO, 0)) QUANTIDADE_PRODUZIDA,
				IIF(COALESCE(D.QUANTIDADE_ALTERN_SALDO, 0) > 0, D.QUANTIDADE_ALTERN_SALDO, COALESCE(D.QUANTIDADE_SALDO, 0)) SALDO,
				COALESCE(D.QUANTIDADE_SOBRA, 0) QUANTIDADE_SOBRA,
				(SELECT IIF(COALESCE(F.UNIDADEMEDIDA_ALTERNATIVO, '') <> '', F.UNIDADEMEDIDA_ALTERNATIVO, F.UNIDADEMEDIDA_SIGLA) FROM TBFAMILIA F WHERE F.CODIGO = PR.FAMILIA_CODIGO) UM

			FROM
				VWREMESSA_TALAO T
				INNER JOIN VWREMESSA_TALAO_DETALHE D ON D.REMESSA_ID = T.REMESSA_ID AND D.REMESSA_TALAO_ID = T.REMESSA_TALAO_ID
				INNER JOIN TBPROGRAMACAO P ON P.TABELA_ID = T.ID
				INNER JOIN TBPRODUTO PR ON PR.CODIGO = D.PRODUTO_ID

			WHERE
				 1=1
            /*@GP_ID*/
            /*@UP_ID*/
            /*@TALAO_ID*/
			/*@DATA*/
		";
				
		$args = [
			'@GP_ID'	=> $gp_id,
			'@UP_ID'	=> $up_id,
			'@TALAO_ID' => $talao_id,
			'@DATA'		=> $data
		];
		
		return $con->query($sql, $args);
	}

}